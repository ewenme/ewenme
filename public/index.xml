<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ewen on ewen</title>
    <link>https://ewen.io/</link>
    <description>Recent content in ewen on ewen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; Ewen Henderson &lt;/a&gt; 2017-18</copyright>
    <lastBuildDate>Thu, 11 Oct 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>bathing tapes vol. two</title>
      <link>https://ewen.io/2018/10/11/bathing-tapes-vol-two/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2018/10/11/bathing-tapes-vol-two/</guid>
      <description>&lt;p&gt;The latest edition of bathing tapes is out there, recorded at home on a Sunday a couple of months ago. The mix is mostly stuff that came out in the second half of this year that I‚Äôve been bumping. There‚Äôs frenetic techno and grime combinations, deviant pop and electro runs, and euphoric breakbeats rubbing against lonely bassweight jams.&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/487675539&amp;amp;color=%23100f0f&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;show_teaser=true&amp;amp;visual=true&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;&lt;strong&gt;or D/L the mix &lt;a href=&#34;https://dl.dropboxusercontent.com/s/qgi3kyuuwfn4p23/bathing_tapes_vol_two.mp3?dl=1&#34;&gt;here&lt;/a&gt; and take it outside‚Ä¶&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As always, credit and love to the makers of all this music, filled me up all autumn and beyond. Full tracklist over on &lt;a href=&#34;https://soundcloud.com/3w3n/bathing-tapes-vol-two&#34;&gt;soundcloud&lt;/a&gt;, go peep and support.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>In search of the mixtape GOAT</title>
      <link>https://ewen.io/2018/09/17/in-search-of-the-mixtape-goat/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2018/09/17/in-search-of-the-mixtape-goat/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2018-09-17-in-search-of-the-mixtape-goat/xxx-art.jpg&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The modern definition of the hip-hop mixtape originates in hip-hop circles of the 2000s, speaking to an artist‚Äôs independently released projects that act as precursors to ‚Äúofficial‚Äù full-lengths. &lt;a href=&#34;https://www.billboard.com/articles/columns/hip-hop/7669073/history-dj-drama-mixtape-evolution&#34;&gt;In previous generations&lt;/a&gt;, hip-hop mixtapes were more DJ-led and focused on the ingenuity of the edit, but a DIY ethos has prevailed with a shift towards MCs as main attraction. The rise of mainstream streaming services and fall of physical formats has challenged the identity of the mixtape somewhat, but understanding how this artform has reinvented itself around the current climate might help alleviate these concerns.&lt;/p&gt;
&lt;p&gt;Traditionally speaking, mixtapes are usually free and subsequently avoid growing copyright issues associated with recording techniques like &lt;a href=&#34;https://en.wikipedia.org/wiki/Sampling_(music)&#34;&gt;sampling&lt;/a&gt; (central to a hip-hop beatmaker‚Äôs wheelhouse). This helps partly explain why some mixtapes have been accompanied by astonishing groundswells of support in spite of modest investment, why mixtape culture is spoken about in reverential terms and why it continues to be a medium for inspired work - the music is unashamedly open-source in attitude, both in it‚Äôs transmission to fans (i.e.¬†for free) and it‚Äôs creation (i.e.¬†freely plucking historic recordings).&lt;/p&gt;
&lt;p&gt;You can actually see how this cultural phenomenon intersects with software development. Take &lt;a href=&#34;https://glitch.com/about&#34;&gt;Glitch‚Äôs about page&lt;/a&gt;, specifically the use of the word ‚Äúremix‚Äù, hinting that the act of a developer re-working an app (that someone else built and shared) isn‚Äôt that far removed from &lt;a href=&#34;https://www.youtube.com/watch?v=zD3lRLThVRY&#34;&gt;Frank Ocean flipping a Coldplay sample&lt;/a&gt;. (I‚Äôm aware that, beyond staring at computer screens in the dark, the developer-musician comparisons probably stop here).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2018-09-17-in-search-of-the-mixtape-goat/nostalgia-ultra-art.jpg&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I wanted to toast this crossover in philosophy by sharing some data-driven stories of the mixtape. This piece should be good ammo in heated mixtape legend convos, at least‚Ä¶&lt;/p&gt;
&lt;div id=&#34;mixtapes-by-the-numbers&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Mixtapes by the numbers&lt;/h2&gt;
&lt;p&gt;So, who was really putting &lt;a href=&#34;https://www.youtube.com/watch?v=DawrlSwHUiM&#34;&gt;Numbers On The Boards&lt;/a&gt;, when it came to mixtapes? In truth, the ethereal nature of the beast and the multitude of ways the product reaches ears without much care for tracking (these are free and unattached to labels, remember) means that comprehensive mixtape statistics are hard to come by.&lt;/p&gt;
&lt;p&gt;A good place to start is &lt;a href=&#34;http://www.datpiff.com/&#34;&gt;DatPiff&lt;/a&gt;, maybe the leading dedicated website for hip-hop mixtape digging. In the &lt;a href=&#34;http://www.datpiff.com/mixtapes/celebrated&#34;&gt;celebrated section&lt;/a&gt;, you can quickly spot download figures mapped to pre-eminent mixtape projects.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2018-09-17-in-search-of-the-mixtape-goat/datpiff-screenshot.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Harvesting these figures and crunching the downloads for each artist can uncover who &lt;em&gt;really&lt;/em&gt; runs the mixtape game.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; This comes with some caveats - mixtape streams are ignored (not readily obtainable for all listings), as are tapes not available on DatPiff (or those that have been taken down). Still, a good idea of the state of play is well within reach (PS the next bit is best enjoyed and explored on a desktop browser, if you have one handy)‚Ä¶&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;style&gt;
/* https://css-tricks.com/full-width-containers-limited-width-parents/ */
.fullwidth {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}
&lt;/style&gt;
&lt;div class=&#34;fullwidth&#34;&gt;
&lt;div id=&#34;chart&#34;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&#34;module&#34;&gt;

  import notebook from &#34;https://api.observablehq.com/@ewenme/mixtape-kings/2.js?key=be2b114c0024434a&#34;;
  
  const renders = {
    &#34;chart&#34;: &#34;#chart&#34;,
  };

  import {Inspector, Runtime} from &#34;https://unpkg.com/@observablehq/notebook-runtime@1.2.0?module&#34;;
  for (let i in renders)
    renders[i] = document.querySelector(renders[i]);

  Runtime.load(notebook, (variable) =&gt; {
    if (renders[variable.name])
      return new Inspector(renders[variable.name]);
  });

&lt;/script&gt;
&lt;blockquote&gt;
&lt;p&gt;As detailed in &lt;a href=&#34;https://bl.ocks.org/mbostock/4063269&#34;&gt;Mike Bostock‚Äôs bubble chart block&lt;/a&gt;, bubble charts aren‚Äôt as perceptually accurate as bars. However, being less concerned with precise values means hundreds of values can be packed into the same chart area, which makes sense for this type of exploratory interactive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;weezy-the&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Weezy the üêê&lt;/h2&gt;
&lt;p&gt;In case there was any doubt, Lil Wayne AKA Weezy AKA Tunechi comes out on top of DatPiff mixtape downloads, clocking in at &lt;strong&gt;~18 million&lt;/strong&gt;. This can be largely attributed to his infamous mixtape run of 2004-2008, encompassing both the &lt;em&gt;Da Drought&lt;/em&gt; and &lt;em&gt;Dedication&lt;/em&gt; series‚Äô. Of the former, &lt;a href=&#34;https://www.youtube.com/watch?v=VjGSyQU-YxQ&#34;&gt;#3&lt;/a&gt; (2007) is widely regarded as the best of the bunch and even fancied as the finest of it‚Äôs class in critical circles. Your fave could never etc etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://proxy.duckduckgo.com/iu/?u=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F10rxK8NVwBH6WA%2Fgiphy.gif&amp;f=1&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Honorable mentions to a few of my favs (plus helpful pointers to some best-in-class material):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gucci Mane (5.8 million): Put out a dozen mixtapes during a monster 2008-2010 period. Check out &lt;a href=&#34;https://www.youtube.com/watch?v=9xpVLjvEPK4&#34;&gt;The Movie: Part 3 (Burrprint: 3D)&lt;/a&gt; (2009) first (BRRRRRR).&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Future (4.3 million): The master of twisted Bacchanalia rap, as prolific as Gucci. Start off with &lt;a href=&#34;https://www.youtube.com/watch?v=DXXZ3J_QIGw&#34;&gt;56 Nights&lt;/a&gt; (2015).&lt;/li&gt;
&lt;li&gt;Chance the Rapper (2.8 million): &lt;a href=&#34;https://www.youtube.com/watch?v=e67Q-sTHVhc&#34;&gt;Acid Rap&lt;/a&gt; (2013) and &lt;a href=&#34;https://www.youtube.com/watch?v=H6C0dfq4ZWM&#34;&gt;Coloring Book&lt;/a&gt; (2016) are dope and up-ended many expectations that independent artists and mixtapes were facing extinction.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I could go on, but why not head back to the interactive and explore some of the music yourself ‚úåÔ∏è&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;All the code used to scrape DatPiff‚Äôs download numbers, as well as the raw data itself, is stored in &lt;a href=&#34;https://github.com/ewenme/mixtapes&#34;&gt;this GitHub repo&lt;/a&gt;. Check the &lt;code&gt;src&lt;/code&gt; directory for code and &lt;code&gt;raw-data&lt;/code&gt; for data in .csv format.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;The interactive visualisation of artist mixtape downloads was made with &lt;a href=&#34;https://d3js.org/&#34;&gt;D3.js&lt;/a&gt; (inspired by &lt;a href=&#34;https://beta.observablehq.com/@mbostock/d3-bubble-chart&#34;&gt;Mike Bostock‚Äôs D3 Bubble Chart&lt;/a&gt;. Original code can be found in &lt;a href=&#34;https://beta.observablehq.com/@ewenme/mixtape-kings/2&#34;&gt;this Observable notebook&lt;/a&gt;. It‚Äôs embedded inside the R markdown document used to generate this post (via &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;blogdown&lt;/a&gt;), which you can access &lt;a href=&#34;https://github.com/rbind/ewenme/blob/master/content/blog/2018-09-17-in-search-of-the-mixtape-goat.Rmd&#34;&gt;here&lt;/a&gt;&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;I can‚Äôt leave without giving it up to Brooke for the &lt;a href=&#34;https://github.com/brooke-watson/BRRR&#34;&gt;BRRR R package&lt;/a&gt;. No running of a slow function is complete without the East Atlanta Santa providing encouragement.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building open football player transfer data</title>
      <link>https://ewen.io/2018/08/27/building-open-football-player-transfer-data/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2018/08/27/building-open-football-player-transfer-data/</guid>
      <description>&lt;script src=&#34;https://ewen.io/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Around this time last year I ran &lt;a href=&#34;https://ewen.io/2017/09/07/unravelling-the-european-football-transfer-window/&#34;&gt;a post on European football transfers&lt;/a&gt;, taking in the 2017/18 season‚Äôs summer window. I got a bit of an itch to refresh this work when the 2018/19 window hit. The aforementioned itch led to me getting in too deep and scraping all major European league transfers going back to the year 2000, naturally.&lt;/p&gt;
&lt;p&gt;Here, I tell a short story about how this open data was built and showcases some visualisation pieces that utilised that effort.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; Hopefully this can encourage others to share whatever neat stuff they tap into.&lt;/p&gt;
&lt;div id=&#34;building-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Building the data&lt;/h2&gt;
&lt;p&gt;I eventually settled on &lt;del&gt;scraping&lt;/del&gt; using &lt;a href=&#34;https://www.theguardian.com/football/ng-interactive/2017/jun/22/transfer-window-2017-every-deal-in-europes-top-five-leagues&#34;&gt;the Guardian‚Äôs Transfer Interactive&lt;/a&gt; to power my previous work. This source included transfer timestamps, which allowed for some intra-window time series stuff - it remains handily &lt;a href=&#34;https://github.com/Worville/guardian_transfers&#34;&gt;hosted by Tom Worville in a public, flat-file format&lt;/a&gt;. However, it isn‚Äôt really set up for investigating historical trends as the Guardian has only run this interactive since 2017, as far as I can tell.&lt;/p&gt;
&lt;p&gt;Enter &lt;a href=&#34;https://www.transfermarkt.co.uk/&#34;&gt;Transfermarkt&lt;/a&gt;, a data goldmine of player transfers for a number of major European leagues (e.g.¬†English Premier League, Spanish La Liga, Italian Serie A) and some other oddities (my personal favourite is &lt;a href=&#34;https://www.transfermarkt.co.uk/spieler/vatersohnnationalspieler/statistik&#34;&gt;this list of father/son combos for national teams - glorious and appreciated&lt;/a&gt;). Season-level stats like player transfers run back for quite a few seasons, joyously arranged in predictable html tables for bountiful scraping. I wrote a short scraping program&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; to collect and clean up player transfers for these (and other) leagues, back to the 2000/01 season (N.B. this decision was entirely arbitrary).&lt;/p&gt;
&lt;p&gt;Et voila - the data is now freely available, &lt;a href=&#34;https://github.com/ewenme/footy-transfer-data/tree/master/data&#34;&gt;hosted on Github as flat .csv files&lt;/a&gt; (in accordance with Transfermarkt‚Äôs &lt;a href=&#34;https://www.transfermarkt.co.uk/intern/anb&#34;&gt;terms of use&lt;/a&gt;)&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;. Here‚Äôs a preview, lovingly featuring the deal taking Mr.¬†Igors Stepanovs to Arsenal.&lt;/p&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 5px; overflow-x: scroll; width:100%; &#34;&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
club
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
name
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
age
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
position
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
club_involved
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
fee
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
transfer_movement
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
fee_cleaned
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
league
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
year
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Arsenal FC
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sylvain WiltordS. Wiltord
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Second Striker
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
G. Bordeaux
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
¬£15.75m
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
in
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15.75
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
premier-league
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Arsenal FC
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Francis JeffersF. Jeffers
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Centre-Forward
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Everton
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
¬£13.77m
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
in
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13.77
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
premier-league
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Arsenal FC
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Laur√©nLaur√©n
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
23
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Right-Back
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
RCD Mallorca
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
¬£9.63m
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
in
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9.63
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
premier-league
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Arsenal FC
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Robert Pir√®sR. Pir√®s
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Left Midfield
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Marseille
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
¬£8.82m
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
in
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8.82
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
premier-league
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Arsenal FC
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tomas DanileviciusT. Danilevicius
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
21
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Centre-Forward
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Lausanne-Sport
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
¬£1.35m
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
in
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.35
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
premier-league
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Arsenal FC
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Igors StepanovsI. Stepanovs
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Centre-Back
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Skonto Riga
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
¬£1.35m
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
in
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.35
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
premier-league
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2000
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Notice the duplicated player name field ü§î if you find a fix, holler. For more on the variables included, visit the &lt;a href=&#34;https://github.com/ewenme/footy-transfer-data/blob/master/README.md&#34;&gt;repo‚Äôs readme&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sketching-some-visuals-on-top&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Sketching some visuals on top&lt;/h2&gt;
&lt;p&gt;Now for a couple of visualisation pieces I‚Äôve tried out using this dataset. I‚Äôve included some notes on my process/workflow for each&lt;a href=&#34;#fn4&#34; class=&#34;footnote-ref&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;, if you‚Äôre that way inclined. Otherwise, just &lt;em&gt;~absorb the inspiration~&lt;/em&gt; üí°&lt;/p&gt;
&lt;p&gt;I took a look at the value of player buys vs sales for Premier League clubs in the 2018/19 window, using a &lt;a href=&#34;https://uc-r.github.io/cleveland-dot-plots&#34;&gt;Cleveland dot plot&lt;/a&gt; (AKA ‚Äòdumbbell‚Äô chart) variant.
&lt;img src=&#34;https://github.com/ewenme/footy-transfer-data/raw/master/figures/premier-league-transfer-spend-2018-web.png&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This type of visualisation is an elegant and simple way to show ranges of data (i.e.¬†spend vs sales difference) across multiple categories (i.e.¬†football clubs). I did the initial sketch for this using my standard charting workflow in R (mostly &lt;a href=&#34;https://ggplot2.tidyverse.org/index.html&#34;&gt;ggplot2&lt;/a&gt; and it‚Äôs many extensions, including &lt;a href=&#34;https://rud.is/b/&#34;&gt;Bob Rudis‚Äô&lt;/a&gt; charming &lt;a href=&#34;https://github.com/hrbrmstr/ggalt&#34;&gt;ggalt&lt;/a&gt; which made this chart type ), but I &lt;em&gt;did&lt;/em&gt; export this into &lt;a href=&#34;https://www.adobe.com/products/illustrator.html&#34;&gt;Adobe Illustrator&lt;/a&gt; (&lt;a href=&#34;https://inkscape.org/en/&#34;&gt;Inkscape&lt;/a&gt; is a fine free alternative) to do good text annotations quicker. The final version therefore includes non-reproducible elements that makes refreshing the viz for new transfer windows non-trivial, but that help in telling stories contained in this view of the data. In this one-off case, I think the trade-off is fine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Next, a look at a single club‚Äôs season-by-season transfer spend and sales, following the relationship between these two amounts through time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/ewenme/footy-transfer-data/raw/master/figures/chelsea-transfers-web.png&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This visualisation choice might be a little difficult to follow at first, if it‚Äôs your first connected scatter (in &lt;a href=&#34;https://medium.com/@Elijah_Meeks/what-charts-do-48ed96f70a74&#34;&gt;this post by Elijah Meeks&lt;/a&gt;, the connected scatter example actually includes a link to an explanation of what‚Äôs going on). &lt;a href=&#34;http://steveharoz.com/research/connected_scatterplot/&#34;&gt;Steve Haroz + collaborators‚Äô research paper&lt;/a&gt; was invaluable in guiding my first application of this chart format. In short, they are good at showing changing data for two variables whenever there is a relatively clear pattern of progression. Similarly to the previous example, this was sketched out in R with ggplot2, with some Illustrator annotation fine-tuning.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That‚Äôs basically it‚Ä¶let me know if you make something üî•üî•üî•&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;You can find the R code used to generate this post &lt;a href=&#34;https://github.com/rbind/ewenme/blob/master/content/blog/2018-08-27-building-open-transfer-data.Rmd&#34;&gt;here&lt;/a&gt;.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;For this post I chose to omit lengthy passages on web scraping, as not to deter non-programmers (insights can be gleaned from the cleaned data w/o additional code). However, the code used to scrape, clean and analyse the data is publicly available within the &lt;code&gt;src&lt;/code&gt; directory of the &lt;a href=&#34;https://github.com/ewenme/footy-transfer-data&#34;&gt;footy-transfer-data GitHub repo&lt;/a&gt;, featuring &lt;a href=&#34;https://github.com/hadley/rvest&#34;&gt;rvest&lt;/a&gt; (web scraping for R) in conjunction with &lt;a href=&#34;https://github.com/tidyverse/purrr&#34;&gt;purrr&lt;/a&gt; (iteration tools for R).&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Web scraping is a legally/ethically grey area. All effort should be made to verify if scraping a webpage is in accordance with the parent domain‚Äôs terms of use. A helpful permissions checker for R, &lt;a href=&#34;https://github.com/ropensci/robotstxt&#34;&gt;robotstxt&lt;/a&gt;, is invaluable in this pursuit. Use this (or similar in other languages), or at least study the terms of use for the domain in question closely.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;For the R code used to sketch the chart examples included in the post (and others that didn‚Äôt make the cut), try &lt;a href=&#34;https://github.com/ewenme/footy-transfer-data/blob/master/src/02-viz.R&#34;&gt;here&lt;/a&gt;.&lt;a href=&#34;#fnref4&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>discogger (day one)</title>
      <link>https://ewen.io/2018/06/07/discogger-day-one/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2018/06/07/discogger-day-one/</guid>
      <description>&lt;p&gt;I‚Äôve been working on a new R package. &lt;a href=&#34;https://github.com/ewenme/discogger&#34;&gt;&lt;strong&gt;&lt;code&gt;discogger&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; is an open-source effort, at an experimental stage of development, providing straightforward tools to help out with Discogs‚Äô &lt;a href=&#34;https://www.discogs.com/developers/#&#34;&gt;API v2.0&lt;/a&gt;. &lt;a href=&#34;https://www.discogs.com&#34;&gt;Discogs&lt;/a&gt; is a crowd-sourced music database and marketplace, a proper treasure trove for record diggers and music lovers to learn more about what they‚Äôre jamming to. A better route into this data for R users should yield some nice results.&lt;/p&gt;
&lt;div id=&#34;discogger-101&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;discogger 101&lt;/h2&gt;
&lt;p&gt;First up, you‚Äôll need to register a Discogs application via &lt;a href=&#34;https://www.discogs.com/settings/developers&#34; class=&#34;uri&#34;&gt;https://www.discogs.com/settings/developers&lt;/a&gt;. Doing so will grant you a ‚Äúpersonal access token‚Äù (accessible at the same link above) which you can store as an environment variable (&lt;em&gt;DISCOGS_API_TOKEN&lt;/em&gt;) using the &lt;code&gt;discogs_api_token()&lt;/code&gt; function. All functions in the &lt;code&gt;discogger&lt;/code&gt; package will automatically look for your token and prompt entry if it isn‚Äôt found.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;discogger&lt;/code&gt; interface to Discogs data currently spans &lt;a href=&#34;https://www.discogs.com/developers/#page:database&#34;&gt;Database&lt;/a&gt; (releases, artists, labels) and &lt;a href=&#34;https://www.discogs.com/developers/#page:user-collection&#34;&gt;User Collection&lt;/a&gt; API requests, with a view to growing functionality in these spaces and eventually expanding into &lt;a href=&#34;https://www.discogs.com/developers/#page:marketplace&#34;&gt;Marketplace&lt;/a&gt; (inventory, orders). The next section will demo how these functions can be put in to use, and chained together for quietly impressive analyses.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;diggin-in-to-dance-mania&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Diggin‚Äô in to Dance Mania&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://dancemaniarecords.com/&#34;&gt;Dance Mania&lt;/a&gt; is about as iconic as it gets when it comes to Chicago House record labels (you hopefully got a flavour by clicking on the name‚Ä¶). &lt;code&gt;discogger&lt;/code&gt; is well equipped to retrieve record label information, with &lt;code&gt;discogs_label()&lt;/code&gt; first up.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load packages
library(discogger)
library(tidyverse)

# get DM label info
discogs_label(label_id = 314)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;Discogs labels/314&amp;gt;
## List of 11
##  $ profile     : chr &amp;quot;American house music label. \r\n\r\nChicago label, founded by [a=Jesse Saunders] in 1985. Started off as Dance &amp;quot;| __truncated__
##  $ releases_url: chr &amp;quot;https://api.discogs.com/labels/314/releases&amp;quot;
##  $ name        : chr &amp;quot;Dance Mania&amp;quot;
##  $ contact_info: chr &amp;quot;Barney&amp;#39;s One Stop Records \r\n3145 West Roosevelt Road \r\nChicago \r\nIllinois 60612 \r\nUSA \r\n\r\ntel: +1 7&amp;quot;| __truncated__
##  $ uri         : chr &amp;quot;https://www.discogs.com/label/314-Dance-Mania&amp;quot;
##  $ sublabels   :List of 4
##   ..$ :List of 3
##   .. ..$ resource_url: chr &amp;quot;https://api.discogs.com/labels/163742&amp;quot;
##   .. ..$ id          : int 163742
##   .. ..$ name        : chr &amp;quot;Dance Mania Digital&amp;quot;
##   ..$ :List of 3
##   .. ..$ resource_url: chr &amp;quot;https://api.discogs.com/labels/6507&amp;quot;
##   .. ..$ id          : int 6507
##   .. ..$ name        : chr &amp;quot;Freak Mode&amp;quot;
##   ..$ :List of 3
##   .. ..$ resource_url: chr &amp;quot;https://api.discogs.com/labels/211818&amp;quot;
##   .. ..$ id          : int 211818
##   .. ..$ name        : chr &amp;quot;Subterranean Playhouse LLC.&amp;quot;
##   ..$ :List of 3
##   .. ..$ resource_url: chr &amp;quot;https://api.discogs.com/labels/5868&amp;quot;
##   .. ..$ id          : int 5868
##   .. ..$ name        : chr &amp;quot;Subterranean Playhouse Series&amp;quot;
##  $ urls        :List of 3
##   ..$ : chr &amp;quot;http://dancemaniarecords.com&amp;quot;
##   ..$ : chr &amp;quot;http://www.facebook.com/DanceManiaRecords&amp;quot;
##   ..$ : chr &amp;quot;http://www.myspace.com/dance_mania_records&amp;quot;
##  $ images      :List of 4
##   ..$ :List of 6
##   .. ..$ uri         : chr &amp;quot;https://img.discogs.com/8PGEb_C6As0EN_OHd4Pu1MlcUQw=/fit-in/175x49/filters:strip_icc():format(jpeg):mode_rgb():&amp;quot;| __truncated__
##   .. ..$ height      : int 49
##   .. ..$ width       : int 175
##   .. ..$ resource_url: chr &amp;quot;https://img.discogs.com/8PGEb_C6As0EN_OHd4Pu1MlcUQw=/fit-in/175x49/filters:strip_icc():format(jpeg):mode_rgb():&amp;quot;| __truncated__
##   .. ..$ type        : chr &amp;quot;primary&amp;quot;
##   .. ..$ uri150      : chr &amp;quot;https://img.discogs.com/KxBBy6laZLchayYbKLD79hdDeVQ=/fit-in/150x150/filters:strip_icc():format(jpeg):mode_rgb()&amp;quot;| __truncated__
##   ..$ :List of 6
##   .. ..$ uri         : chr &amp;quot;https://img.discogs.com/vMlkxiCuOQClKfkSkbmTw_ZqUmg=/fit-in/428x183/filters:strip_icc():format(jpeg):mode_rgb()&amp;quot;| __truncated__
##   .. ..$ height      : int 183
##   .. ..$ width       : int 428
##   .. ..$ resource_url: chr &amp;quot;https://img.discogs.com/vMlkxiCuOQClKfkSkbmTw_ZqUmg=/fit-in/428x183/filters:strip_icc():format(jpeg):mode_rgb()&amp;quot;| __truncated__
##   .. ..$ type        : chr &amp;quot;secondary&amp;quot;
##   .. ..$ uri150      : chr &amp;quot;https://img.discogs.com/aVpJTY8XlnvI_HEWE5NEv09Jxd4=/fit-in/150x150/filters:strip_icc():format(jpeg):mode_rgb()&amp;quot;| __truncated__
##   ..$ :List of 6
##   .. ..$ uri         : chr &amp;quot;https://img.discogs.com/2GtH1TZaxGaGTfHrudDk6LOiURA=/fit-in/326x86/filters:strip_icc():format(jpeg):mode_rgb():&amp;quot;| __truncated__
##   .. ..$ height      : int 86
##   .. ..$ width       : int 326
##   .. ..$ resource_url: chr &amp;quot;https://img.discogs.com/2GtH1TZaxGaGTfHrudDk6LOiURA=/fit-in/326x86/filters:strip_icc():format(jpeg):mode_rgb():&amp;quot;| __truncated__
##   .. ..$ type        : chr &amp;quot;secondary&amp;quot;
##   .. ..$ uri150      : chr &amp;quot;https://img.discogs.com/2YB6vAViUfMMtBMfcVEGCMIIGck=/fit-in/150x150/filters:strip_icc():format(jpeg):mode_rgb()&amp;quot;| __truncated__
##   ..$ :List of 6
##   .. ..$ uri         : chr &amp;quot;https://img.discogs.com/EbovJSq-DmlEbQStSDYjUTkUk-o=/fit-in/175x49/filters:strip_icc():format(jpeg):mode_rgb():&amp;quot;| __truncated__
##   .. ..$ height      : int 49
##   .. ..$ width       : int 175
##   .. ..$ resource_url: chr &amp;quot;https://img.discogs.com/EbovJSq-DmlEbQStSDYjUTkUk-o=/fit-in/175x49/filters:strip_icc():format(jpeg):mode_rgb():&amp;quot;| __truncated__
##   .. ..$ type        : chr &amp;quot;secondary&amp;quot;
##   .. ..$ uri150      : chr &amp;quot;https://img.discogs.com/kLTNU4xpYKI-bOg60VXiW-2BKUk=/fit-in/150x150/filters:strip_icc():format(jpeg):mode_rgb()&amp;quot;| __truncated__
##  $ resource_url: chr &amp;quot;https://api.discogs.com/labels/314&amp;quot;
##  $ id          : int 314
##  $ data_quality: chr &amp;quot;Correct&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hopefully you learnt something new from that output, but it‚Äôs not particularly ready for any analysis. I‚Äôm quite interested in getting more detailed metadata around Dance Mania‚Äôs 12&amp;quot; releases, which can be done with &lt;code&gt;discogs_label_releases()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get DM releases
dm_releases &amp;lt;- discogs_label_releases(label_id = 314)
  
# extract request content
dm_releases_df &amp;lt;- dm_releases$content %&amp;gt;%
  # return 12&amp;quot; releases only
  filter(grepl(&amp;#39;12&amp;quot;&amp;#39;, format))

dm_releases_df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 581 x 10
##    status  thumb     format  title catno  year resource_url artist      id
##    &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt;
##  1 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;&amp;quot;  Hous‚Ä¶ 14040  1987 https://api‚Ä¶ The Ho‚Ä¶ 6.40e4
##  2 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;&amp;quot;  What‚Ä¶ 5100‚Ä¶  1985 https://api‚Ä¶ The Br‚Ä¶ 1.09e6
##  3 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;&amp;quot;  Hous‚Ä¶ B.C.‚Ä¶  1987 https://api‚Ä¶ The Ho‚Ä¶ 4.21e5
##  4 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;&amp;quot;  Hous‚Ä¶ B.C.‚Ä¶  1987 https://api‚Ä¶ The Ho‚Ä¶ 1.97e5
##  5 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;&amp;quot;  Frea‚Ä¶ D.J.‚Ä¶  1996 https://api‚Ä¶ D.J. F‚Ä¶ 6.75e4
##  6 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;,‚Ä¶ This‚Ä¶ D.M.‚Ä¶  1988 https://api‚Ä¶ Mello ‚Ä¶ 5.17e6
##  7 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;&amp;quot;  This‚Ä¶ D.M.‚Ä¶  1988 https://api‚Ä¶ Mello ‚Ä¶ 4.27e5
##  8 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;&amp;quot;  Hous‚Ä¶ DM 0‚Ä¶  1986 https://api‚Ä¶ The Ho‚Ä¶ 7.30e3
##  9 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;&amp;quot;  Hard‚Ä¶ DM 0‚Ä¶  1987 https://api‚Ä¶ Duane ‚Ä¶ 1.40e3
## 10 Accept‚Ä¶ https://‚Ä¶ &amp;quot;12\&amp;quot;,‚Ä¶ Hard‚Ä¶ DM 0‚Ä¶  1987 https://api‚Ä¶ Duane ‚Ä¶ 6.52e6
## # ... with 571 more rows, and 1 more variable: label_id &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The tidy tibble format returned is much better suited to analysis in R, but the content I‚Äôm after is not quite there. Turns out community metrics, such as the number of users who own or have marked a record as one they ‚Äúwant‚Äù, are available from a records release page (not it‚Äôs label release listing). &lt;code&gt;discogs_release()&lt;/code&gt; can be used, in conjunction with &lt;code&gt;map()&lt;/code&gt; (from the &lt;a href=&#34;https://purrr.tidyverse.org/&#34;&gt;&lt;code&gt;purrr&lt;/code&gt;&lt;/a&gt; package), to iterate through releases and collect this information.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get DM release info
dm_releases_info &amp;lt;- map(dm_releases_df$id, discogs_release)

# extract release content
dm_releases_content &amp;lt;- map(dm_releases_info, &amp;quot;content&amp;quot;)
  
# extract fields relevant for community metrics analysis
dm_community_metrics &amp;lt;- tibble(
  title = map_chr(dm_releases_content, &amp;quot;title&amp;quot;),
  artist = map_chr(dm_releases_content, &amp;quot;artists_sort&amp;quot;),
  year = map_int(dm_releases_content, &amp;quot;year&amp;quot;),
  have = map_int(dm_releases_content, c(&amp;quot;community&amp;quot;, &amp;quot;have&amp;quot;)),
  want = map_int(dm_releases_content, c(&amp;quot;community&amp;quot;, &amp;quot;want&amp;quot;))
  ) %&amp;gt;%
  # for each record...
  group_by(title, artist) %&amp;gt;%
  # keep the one most users have...
  filter(have == max(have),
         # ...and rm releases with missing release year
         year &amp;gt;= 1985)

dm_community_metrics&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 317 x 5
## # Groups:   title, artist [317]
##    title                      artist                      year  have  want
##    &amp;lt;chr&amp;gt;                      &amp;lt;chr&amp;gt;                      &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
##  1 Freaky Style Take: 2       DJ Funk                     1996   170   168
##  2 This X-Mas Rap             Mello D.                    1988     3    23
##  3 This Christmas (Rap)       Mello D.                    1988    30    72
##  4 House Nation               Housemaster Boyz, The And‚Ä¶  1986   967  1113
##  5 Hard Core (On The One)     Duane &amp;amp; Co.                 1987   401   261
##  6 Jack My Body               Yellow House                1987   321   297
##  7 Frequency (Out Of Control) Lil&amp;#39; Louis                  1987     3   379
##  8 Insane                     Suburban Boyz               1988   253   480
##  9 The Original Video Clash   Lil&amp;#39; Louis                  1988   893  1275
## 10 I Want Your Love           Victor Romeo &amp;amp; The Move F‚Ä¶  1988   280   210
## # ... with 307 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this output, a visualisation can be knocked up to explore which Dance Mania 12-inches Discogs users want or own.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load viz helpers
library(scico)
library(hrbrthemes)
library(ggrepel)

# plot
ggplot(dm_community_metrics, aes(x=have, y=want)) +
  geom_point(aes(colour=year)) +
  geom_text_repel(aes(label=paste0(artist, &amp;quot; - &amp;quot;, title)), size=2,
                  data = subset(dm_community_metrics, have &amp;gt;= 800 | want &amp;gt;= 1000),
                  family = &amp;quot;IBM Plex Sans&amp;quot;) +
  labs(title=&amp;quot;Dance Mania 12\&amp;quot;s on Discogs&amp;quot;, 
       subtitle=&amp;quot;How many Discogs user&amp;#39;s own/want Dance Mania 12-inches (1985 - 2018).&amp;quot;,
       x = &amp;quot;Own it&amp;quot;, y = &amp;quot;Want it&amp;quot;,
       caption=&amp;quot;source: Discogs | made by @ewen_&amp;quot;) +
  theme_ipsum_ps(grid = FALSE) +
  scico::scale_colour_scico(palette = &amp;quot;lajolla&amp;quot;) +
  guides(col = guide_colourbar(direction = &amp;quot;horizontal&amp;quot;, title = &amp;quot;Release year&amp;quot;,
                               barheight = 0.5, barwidth = 10, title.vjust = 1)) +
  theme(legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/2018-06-07-discogger-day-one_files/figure-html/unnamed-chunk-4-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;close&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Close&lt;/h2&gt;
&lt;p&gt;For more on installation, development status and for (very welcome) contributions or issues, check in at the &lt;a href=&#34;https://github.com/ewenme/discogger&#34;&gt;Github repo&lt;/a&gt;. I‚Äôll look to list features I intend to introduce there - feel free to beat me to the punch on any of those.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Music is a language, you see, a universal language.
Sun Ra&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>deejae</title>
      <link>https://ewen.io/2018/05/12/deejae/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2018/05/12/deejae/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://genius.com/Artful-dodger-re-rewind-lyrics&#34;&gt;this goes out to all the DJs‚Ä¶&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I adore spinnin‚Äô records really loud, and trying to evoke all manner of emotions and recontextualising sounds by blending tracks greater than the sum of their parts. I made a thing called &lt;a href=&#34;https://ewenme.shinyapps.io/deejae&#34;&gt;deejae&lt;/a&gt; which intersects with some other nerd tendencies I have, like data viz.&lt;/p&gt;
&lt;p&gt;Digital DJ software like &lt;a href=&#34;https://www.native-instruments.com/en/products/traktor/dj-software/traktor-pro-2/&#34;&gt;Native Instruments‚Äô Traktor&lt;/a&gt; stores a user‚Äôs tarck library/play history in XML structures similar to popular audio library management software like &lt;em&gt;iTunes&lt;/em&gt;. Inside the software, you can get hold of common metrics like play count, date added and date last played for tracks in your library. It‚Äôs purposefully optimised for DJs to use during a performance, and so the software isn‚Äôt set up to try and get at more complex questions, like &lt;em&gt;‚Äúwhat tracks do I tend to play in the latter stages of my DJ sets?‚Äù&lt;/em&gt;, or &lt;em&gt;‚Äúwhat was I playing in my sets in 2016?‚Äù&lt;/em&gt;. Neither is it for visualising the process/evolution of a DJ set, after the fact (post-match analysis, if you will).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ewenme.shinyapps.io/deejae&#34;&gt;deejae&lt;/a&gt; is a free-to-use web application that attempts to empower DJs with a tool that can answer these kinds of questions. Examine your selections set-by-set, or see what patterns emerge over longer periods. Support exists for &lt;em&gt;Traktor&lt;/em&gt; users only right now, but if there‚Äôs appetite I‚Äôll look to add support for other DDJ software soon enough.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/ewenme/deejae/raw/master/example_animation.gif&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I want &lt;em&gt;deejae&lt;/em&gt; to be an ongoing open-source project, with user feedback driving development. As described above, expect more functionality/features in response to how DJs want to interact with it. &lt;a href=&#34;ewenhenderson@gmail.com&#34;&gt;Hit me up&lt;/a&gt; with ideas / feedback / bugs. If you‚Äôre a developer, file an issue/pull request over at the &lt;a href=&#34;https://github.com/ewenme/deejae&#34;&gt;GitHub repo&lt;/a&gt; (also home to all source code).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I prefer to unwind by DJing. I learned that from Mike D from the Beastie Boys. After a show, he would DJ. Once I saw that, I wanted to do that. And now DJing is like my lifeline. I love the power it represents. (Questlove)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>bathing tapes vol. one</title>
      <link>https://ewen.io/2018/05/11/bathing-tapes-vol-one/</link>
      <pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2018/05/11/bathing-tapes-vol-one/</guid>
      <description>&lt;p&gt;Last month I recorded a studio mix at home on the 1210s, the first volume of an occasional series for me to share sounds I‚Äôm bumping heavy. I‚Äôm calling it &lt;em&gt;bathing tapes&lt;/em&gt; (don‚Äôt @ me, &lt;a href=&#34;https://en.wikipedia.org/wiki/Nigo&#34;&gt;Nigo&lt;/a&gt;), ‚Äôcos most of the jams won‚Äôt sound out of place during an extended exfoliation session. but you should enjoy the soothing vibes wherever you‚Äôre at. Find experimental techno diversions, Houston hip-hop, ethereal footwork waves, bleepy dancehall and more sweet infusions inside.&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/434633817&amp;amp;color=%231d191f&amp;amp;auto_play=true&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;show_teaser=true&amp;amp;visual=true&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;&lt;strong&gt;PS you can d/l the mix &lt;a href=&#34;https://dl.dropboxusercontent.com/s/fm2xp2d8hj6ths3/bathing_tapes_vol_one.mp3?dl=1&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All credit and thank you to the creators of these tracks. Full tracklist over on &lt;a href=&#34;https://soundcloud.com/3w3n/bathing-tapes-vol-one&#34;&gt;soundcloud&lt;/a&gt; üëÄ but some new artists in there you should go check for‚Ä¶ &lt;a href=&#34;https://objectblue.carrd.co/&#34;&gt;object blue&lt;/a&gt;, &lt;a href=&#34;https://soundcloud.com/cl_lit&#34;&gt;Ciel&lt;/a&gt;, &lt;a href=&#34;https://soundcloud.com/wnkrs&#34;&gt;DJ Python&lt;/a&gt; to name a few.&lt;/p&gt;
&lt;p&gt;This is something of a break from the usual content I have posted here. In 2017, I started this blog to write about and share examples of my work in data science/data sci-adjacent areas. The work of &lt;a href=&#34;https://yihui.name/&#34;&gt;Yihui&lt;/a&gt; in creating &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;blogdown&lt;/a&gt; made it fun to share technical posts and give back to the &lt;a href=&#34;https://www.r-project.org/&#34;&gt;R&lt;/a&gt; community, something I did with regularity last year.&lt;/p&gt;
&lt;p&gt;This year, I have consciously put less pressure on myself to force through ideas (noticeable from the date of my last post), and I‚Äôve dedicated more time on other crafts and passions, following creative thoughts naturally. I want to use this site to document all my creations, whatever the medium (and likely audience) and without hang-ups about the Personal Brand&lt;sup&gt;TM&lt;/sup&gt;. So, tune in and tune out when it feels good üåü&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introducing geniusr</title>
      <link>https://ewen.io/2017/12/06/introducing-geniusr/</link>
      <pubDate>Wed, 06 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2017/12/06/introducing-geniusr/</guid>
      <description>&lt;p&gt;I made a new R package (üî•üì¶üî•) this week. My &lt;a href=&#34;https://ewenme.rbind.io/blog/2017-03-20-kanye_sentiment_analysis/&#34;&gt;sophomore post on this site&lt;/a&gt; (from way back in March) was a text-based analysis of Kanye West records, which exposed me to the &lt;a href=&#34;https://genius.com/&#34;&gt;Genius&lt;/a&gt; API&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; once I wanted to get hold of some lyrical content. In the process, I wrote some functions for playing nicely with this API in R that I knew would probably be handy for others dabbling/wanting to dabble in similar matters.&lt;/p&gt;
&lt;p&gt;Since then, I‚Äôve found a window of time to build on and consolidate this work into a well-rounded package. &lt;code&gt;geniusr&lt;/code&gt; is now &lt;a href=&#34;https://cran.r-project.org/web/packages/geniusr/index.html&#34;&gt;available on CRAN&lt;/a&gt;. This is the tour.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;searchin&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Searchin‚Äô&lt;/h2&gt;
&lt;p&gt;The Genius API‚Äôs search capabilities allows for users to scan all hosted content on the site (i.e.¬†all songs). A couple of quick implementations exist in the package for retrieving artist (&lt;code&gt;search_artist()&lt;/code&gt;) and song (&lt;code&gt;search_song()&lt;/code&gt;) matches for search terms. Let‚Äôs start by looking for songs brought back by a simple search for ‚ÄúVersace‚Äù.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;versace_search &amp;lt;- search_song(search_term = &amp;quot;Versace&amp;quot;) %&amp;gt;% glimpse&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 10
## Variables: 5
## $ song_id         &amp;lt;int&amp;gt; 176872, 2898687, 182654, 176951, 183346, 20050...
## $ song_name       &amp;lt;chr&amp;gt; &amp;quot;Versace (Remix) (Ft.¬†Drake)&amp;quot;, &amp;quot;Versace on the...
## $ song_lyrics_url &amp;lt;chr&amp;gt; &amp;quot;https://genius.com/Migos-versace-remix-lyrics...
## $ artist_id       &amp;lt;int&amp;gt; 44080, 500, 1319, 44080, 554, 32397, 2236, 358...
## $ artist_name     &amp;lt;chr&amp;gt; &amp;quot;Migos&amp;quot;, &amp;quot;Bruno Mars&amp;quot;, &amp;quot;Meek Mill&amp;quot;, &amp;quot;Migos&amp;quot;, &amp;quot;...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;goin-meta&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Goin‚Äô Meta&lt;/h2&gt;
&lt;p&gt;Wanna bring back some fuller information about a particular song (&lt;code&gt;get_song_meta()&lt;/code&gt;), artist (&lt;code&gt;get_artist_meta()&lt;/code&gt;) or album (&lt;code&gt;get_album_meta()&lt;/code&gt;)? Well, now you can. Let‚Äôs test one out - how about investigating a classic Versace-themed track from our last search, ‚ÄòVersace‚Äô by Migos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;versace_meta &amp;lt;- get_song_meta(song_id = versace_search$song_id[4]) %&amp;gt;% glimpse&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 1
## Variables: 13
## $ song_id            &amp;lt;int&amp;gt; 176951
## $ song_name          &amp;lt;chr&amp;gt; &amp;quot;Versace&amp;quot;
## $ song_lyrics_url    &amp;lt;chr&amp;gt; &amp;quot;https://genius.com/Migos-versace-lyrics&amp;quot;
## $ song_art_image_url &amp;lt;chr&amp;gt; &amp;quot;https://images.genius.com/4fe960be500117d6...
## $ release_date       &amp;lt;chr&amp;gt; &amp;quot;2013-07-09&amp;quot;
## $ pageviews          &amp;lt;int&amp;gt; 118683
## $ annotation_count   &amp;lt;int&amp;gt; 24
## $ artist_id          &amp;lt;int&amp;gt; 44080
## $ artist_name        &amp;lt;chr&amp;gt; &amp;quot;Migos&amp;quot;
## $ artist_url         &amp;lt;chr&amp;gt; &amp;quot;https://genius.com/artists/Migos&amp;quot;
## $ album_id           &amp;lt;int&amp;gt; 36011
## $ album_name         &amp;lt;chr&amp;gt; &amp;quot;Young Rich Niggas&amp;quot;
## $ album_url          &amp;lt;chr&amp;gt; &amp;quot;https://genius.com/albums/Migos/Young-rich...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this metadata, we can easily pull up the song‚Äôs artwork, for example. Why not.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;artwork &amp;lt;- versace_meta$song_art_image_url

knitr::include_graphics(path = artwork)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://images.genius.com/4fe960be500117d652f0e856ce0b61ce.316x316x1.jpg&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;gettin-lyrical&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Gettin‚Äô Lyrical&lt;/h2&gt;
&lt;p&gt;The package allows you to grab lyrics for tracks real quick, using the &lt;code&gt;scrape_lyrics_id()&lt;/code&gt; (or &lt;code&gt;scrape_lyrics_url()&lt;/code&gt;) function.&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; While we‚Äôre at it, let‚Äôs call on &lt;code&gt;tidytext&lt;/code&gt; and answer a question for the people - &lt;em&gt;just how much were the Migos chatting about ‚ÄúVersace‚Äù in ‚ÄòVersace‚Äô?&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get words proportion representation
versace_prop &amp;lt;- scrape_lyrics_url(versace_meta$song_lyrics_url) %&amp;gt;%
  unnest_tokens(word, line) %&amp;gt;%
  count(word) %&amp;gt;%
  mutate(proportion = n / sum(n)) %&amp;gt;%
  # was the word versace or the rest
  mutate(versace_or_the_rest=if_else(word == &amp;quot;versace&amp;quot;, &amp;quot;Versace&amp;quot;, &amp;quot;Not Versace&amp;quot;)) %&amp;gt;%
  group_by(versace_or_the_rest) %&amp;gt;%
  summarise(proportion=sum(proportion)*100)

# waffle plot
parts &amp;lt;- c(&amp;quot;Not Versace&amp;quot; = versace_prop$proportion[[1]],
           &amp;quot;Versace&amp;quot; = versace_prop$proportion[[2]])

waffle(parts, rows = 8, size = 1, colors = c(&amp;quot;#3C3A32&amp;quot;, &amp;quot;#E3BD08&amp;quot;), use_glyph = &amp;quot;volume-up&amp;quot;, 
       glyph_size = 10, title = &amp;quot;How much Versace is in Migos - &amp;#39;Versace&amp;#39;?&amp;quot;) +
  labs(caption=&amp;quot;@ewen_&amp;quot;) +
  theme_void(base_family = &amp;quot;Work Sans&amp;quot;, base_size = 12) +
  theme(legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/introducing-geniusr_files/figure-html/lyrics-1.svg&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The word ‚ÄúVersace‚Äù represents 32.5% of the lyrics in Migos - Versace. Phew.&lt;/p&gt;
&lt;p&gt;That‚Äôs all for now, enjoy the package and keep up with future developments over at the &lt;a href=&#34;https://github.com/ewenme/geniusr&#34;&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Genius‚Äô &lt;a href=&#34;https://docs.genius.com/&#34;&gt;documentation pages&lt;/a&gt; are helpful if you want to know more about the API.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;For installation &amp;amp; authentication guidance, head for the &lt;a href=&#34;https://github.com/ewenme/geniusr&#34;&gt;README&lt;/a&gt;.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;As well as API helper functions, the package includes things that are scraping the Genius site (Genius‚Äô API doesn‚Äôt include lyrics, for example). Be sure to read the &lt;a href=&#34;https://genius.com/static/terms&#34;&gt;terms of service&lt;/a&gt; in case of any concerns.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hacking Homelessness &amp; PDF Prisons</title>
      <link>https://ewen.io/2017/11/09/hacking-homelessness--pdf-prisons/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2017/11/09/hacking-homelessness--pdf-prisons/</guid>
      <description>&lt;p&gt;Shout-out to the &lt;a href=&#34;http://us16.campaign-archive2.com/home/?u=5ea551600fcdf84334e5aa6b0&amp;amp;id=26c0b7221a&#34;&gt;Monday Morning Data Science&lt;/a&gt; mailout from John Hopkins. Making my way through this week‚Äôs (#41) edition, I hit upon quite the eulogy concerning a new R package:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúThe most compelling data visualization libraries I‚Äôve seen in awhile‚Ä¶you have to see it to believe it‚Äù&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You had me at compelling (I‚Äôm not sure &lt;em&gt;who&lt;/em&gt; had me exactly, this was the only entry w/o a name attached to it ü§î).&lt;/p&gt;
&lt;div id=&#34;hex-democratization&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hex Democratization&lt;/h2&gt;
&lt;p&gt;Enter &lt;a href=&#34;https://github.com/jbaileyh/geogrid&#34;&gt;&lt;code&gt;geogrid&lt;/code&gt;&lt;/a&gt; and a solution to the perennial information communication problem of plotting polygons of different sizes, that‚Äôs equal parts functional and beautiful. In the link above the author, Joseph Bailey, eloquently explains the motivations behind this package for automatic transformations of geospatial polygons into regular and hexagonal grids. In short, a grid system ensures a fairer representation of spatial data (while retaining geography) and an automated implementation means this is suitable to use in less commonly studied places. On both counts, this is a wicked example of building tools that democratize good data science. ‚úã&lt;/p&gt;
&lt;p&gt;Next, I just needed a good reason to wheel it out (aside from sharing with y‚Äôall).&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;full-metal-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Full Metal Data&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mungos.org/work-with-us/chain/&#34;&gt;Combined Homelessness and Information Network (CHAIN)&lt;/a&gt; is the foremost project collecting data about homelessness in London. Gaining direct access to the database is strictly limited to those working directly with rough sleepers. However, CHAIN reports are published on the Greater London Authority‚Äôs (GLA) &lt;a href=&#34;https://data.london.gov.uk/dataset/chain-reports&#34;&gt;London Datastore&lt;/a&gt;. The full annual report does contain data on the spatial distribution of rough sleepers, but it‚Äôs only available in PDF format. üíÄ&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-11-09-Hacking_Homelessness_and_PDF_Prisons/file_extensions.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This xkcd cartoon is in good humour, but there‚Äôs a lot of truth in this - PDF‚Äôs have risen to represent a kind of absolute truth, embodied by their relative impenetrability from outside influence (this includes pesky data scientists). This all-but-closed system becomes a big problem when we want to extract the ‚Äòopen‚Äô data holed up inside. (Enter next R package to save the day, stage left).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;introducing-tabulizer-aka-governments-lock-up-your-pdfs&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introducing tabulizer AKA Governments, Lock Up Your PDFs&lt;/h2&gt;
&lt;p&gt;Actual footage of &lt;a href=&#34;https://github.com/ropensci/tabulizer&#34;&gt;`tabulizer&lt;/a&gt;, an rOpenSci project dreamed up by Thomas Leeper, encountering impervious PDF #478:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-11-09-Hacking_Homelessness_and_PDF_Prisons/oreally.jpg&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As the &lt;a href=&#34;https://ropensci.org/blog/2017/04/18/tabulizer/&#34;&gt;rOpenSci release&lt;/a&gt; tells, &lt;code&gt;tabulizer&lt;/code&gt; gives us R mortals the power of the &lt;a href=&#34;https://github.com/tabulapdf/tabula-java&#34;&gt;tabula-java library&lt;/a&gt; for extracting tables from PDF files (which, in turn, powers &lt;a href=&#34;http://tabula.technology/&#34;&gt;Tabula&lt;/a&gt;, which you might have come across). You should dig in to that release blog (and associated GitHub repo) for the juicy inner workings, but I‚Äôll show it off very shortly.&lt;/p&gt;
&lt;p&gt;I should say that I hit some snags trying to get this package fully operational (again, detailed in the package release), owing to the dependency on Java. I will just say that the help contained within the below links were able to get me on my way (as a Mac user) AND it was worth it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/35179151/cannot-load-r-xlsx-package-on-mac-os-10-11/36045290&#34;&gt;Relinking Java &amp;amp; rJava&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/30738974/rjava-load-error-in-rstudio-r-after-upgrading-to-osx-yosemite&#34;&gt;rJava fix after OSX upgrade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ropensci/tabulizer/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue&#34;&gt;&lt;code&gt;tabulizer&lt;/code&gt; issues page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;where-the-magic-happens&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Where the Magic Happens&lt;/h2&gt;
&lt;p&gt;With new friends in tow, it‚Äôs about to go down on this PDF. Here‚Äôs an idea of what we‚Äôre working with (Eeyore‚Äôs sad at PDFs courtesy of &lt;a href=&#34;https://cran.r-project.org/web/packages/magick/vignettes/intro.html&#34;&gt;&lt;code&gt;magick&lt;/code&gt;&lt;/a&gt;, if you were wondering):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-11-09-Hacking_Homelessness_and_PDF_Prisons/eeyore.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To get the data in this table out of it‚Äôs prison, we use &lt;code&gt;extract_tables()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tabulizer)

homeless_spatial_tab &amp;lt;- extract_tables(file = &amp;quot;https://files.datapress.com/london/dataset/chain-reports/2017-06-30T09:03:07.84/Greater%20London%20full%202016-17.pdf&amp;quot;, pages = 19)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We simply fed this two arguments - the file path of the report and the page number with our table of interest - and returned a list object of length one, containing a character matrix. The resultant object needs some light wrangling to get it just right:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# specify table list item
homeless_spatial_tab &amp;lt;- homeless_spatial_tab[[1]]

# remove unneeded rows and cols
homeless_spatial_tab &amp;lt;- homeless_spatial_tab[c(-2, -15, -37), -6:-7]

# get col names
col_names &amp;lt;- homeless_spatial_tab[1, ]

# create dataframe
homeless_spatial_tab &amp;lt;- data.frame(homeless_spatial_tab[-1, ])

# set colnames
colnames(homeless_spatial_tab) &amp;lt;- col_names

# set col types
homeless_spatial_tab &amp;lt;- mutate_at(homeless_spatial_tab, c(&amp;quot;2013/14&amp;quot;, &amp;quot;2014/15&amp;quot;, &amp;quot;2015/16&amp;quot;, &amp;quot;2016/17&amp;quot;), as.character)
homeless_spatial_tab &amp;lt;- mutate_at(homeless_spatial_tab, c(&amp;quot;2013/14&amp;quot;, &amp;quot;2014/15&amp;quot;, &amp;quot;2015/16&amp;quot;, &amp;quot;2016/17&amp;quot;), as.numeric)

head(homeless_spatial_tab)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          Borough 2013/14 2014/15 2015/16 2016/17
## 1    Westminster    2197    2570    2857    2767
## 2         Camden     501     563     641     702
## 3  Tower Hamlets     324     377     395     445
## 4         Newham     202     221     260     396
## 5 City of London     317     373     440     379
## 6        Lambeth     427     468     445     355&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Eeyore is joyful at this sight, mark my words. How effortless was that? This data is ripe for mapping. Speaking of which‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bring-in-the-maps&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bring in the Maps&lt;/h2&gt;
&lt;p&gt;Back to &lt;code&gt;geogrid&lt;/code&gt; stuff. For starters, let‚Äôs load in the shapefiles we need (note: the GitHub repo‚Äôs example is actually on London, too, so I won‚Äôt dwell on every similar detail):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(geogrid)

# get spatial polygons
input_file &amp;lt;- system.file(&amp;#39;extdata&amp;#39;, &amp;#39;london_LA.json&amp;#39;, package=&amp;#39;geogrid&amp;#39;)
original_shapes &amp;lt;- read_polygons(input_file)

# get polygon details
original_details &amp;lt;- calculate_grid(original_shapes)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the case of spatial joins, I‚Äôve found [&lt;code&gt;sf&lt;/code&gt;] (&lt;a href=&#34;https://github.com/r-spatial/sf&#34; class=&#34;uri&#34;&gt;https://github.com/r-spatial/sf&lt;/a&gt;)(simple features) incredibly intuitive and so I‚Äôll employ this tactic now to merge the distinct datasets together. I did notice some differences in the names given to certain London Boroughs (mainly the use of ‚Äò&amp;amp;‚Äô/‚Äòand‚Äô) which will need addressing as well.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# rename homeless data boroughs strings not matching geogrid shp
homeless_spatial_tab$Borough &amp;lt;- str_replace(homeless_spatial_tab$Borough, pattern = &amp;quot;Richmond&amp;quot;,
                                            replacement = &amp;quot;Richmond upon Thames&amp;quot;)
homeless_spatial_tab$Borough &amp;lt;- str_replace(homeless_spatial_tab$Borough, 
                                            pattern = &amp;quot;&amp;amp;&amp;quot;,
                                            replacement = &amp;quot;and&amp;quot;)

library(sf)

# turn geogrid shapefile into sf format
original_shapes_sf &amp;lt;- st_as_sf(original_shapes)

# join homeless data
original_shapes_sf &amp;lt;- left_join(original_shapes_sf, homeless_spatial_tab, by=c(&amp;quot;NAME&amp;quot;=&amp;quot;Borough&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We‚Äôre about ready to put plot to paper. First, let‚Äôs take a look at a traditional, real space assignment of the area.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get coords
coords &amp;lt;- original_shapes_sf %&amp;gt;%
  # find polygon centroids (sf points object)
  st_centroid %&amp;gt;%
  # extract the coordinates of these points as a matrix
  st_coordinates

# insert centroid long and lat fields as attributes of polygons
original_shapes_sf$long &amp;lt;- coords[,1]
original_shapes_sf$lat &amp;lt;- coords[,2]

# get percentage change from baseline
original_shapes_sf$pct_chg &amp;lt;- (original_shapes_sf$`2016/17` - original_shapes_sf$`2013/14`) / original_shapes_sf$`2013/14` * 100

# traditional map
ggplot(original_shapes_sf) +
  geom_sf(aes(fill = pct_chg)) +
  geom_text(aes(long, lat, label=str_sub(NAME, 1, 4)), 
            alpha = 0.75, size = 2.5, color = &amp;#39;white&amp;#39;) +
  coord_sf() +
  scale_fill_viridis_c() +
  theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/hacking-homelessness-pdf-prisons_files/figure-html/traditional_map-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The metric used here represents % change in 2016/17 rough sleepers compared to 2013/14. Barking is highest (14 up to 49), but the eye and mind may be more drawn to some of it‚Äôs bigger neighbours (e.g.¬†Havering).&lt;/p&gt;
&lt;p&gt;Algorithmic tessellation is used to generate possible grid layouts for the data (as explained in the GitHub repo - I‚Äôll just be demo-ing the hexes, but the same can be done with regular grids):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/hacking-homelessness-pdf-prisons_files/figure-html/seeds-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I‚Äôm quite partial to #3. Maneuvering from real space geography to this grid involves an implementation of the &lt;a href=&#34;https://github.com/RcppCore/rcpp-gallery/blob/gh-pages/src/2013-09-24-minimal-assignment.cpp&#34;&gt;hungarian algorithm&lt;/a&gt;. All you have to do is &lt;code&gt;calculate_cell_size()&lt;/code&gt; with the grid (seed) of choice and &lt;code&gt;assign_polygons()&lt;/code&gt; to the shapefile containing the original geography. From there, the steps to visualisation are identical to previous ones:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;new_cells_hex &amp;lt;-  calculate_grid(original_shapes, 0.03, &amp;#39;hexagonal&amp;#39;, 3)
resulthex &amp;lt;- assign_polygons(original_shapes, new_cells_hex)

# turn geogrid shapefile into sf format
resulthex_sf &amp;lt;- st_as_sf(resulthex)

# join homeless data
resulthex_sf &amp;lt;- left_join(resulthex_sf, homeless_spatial_tab, by=c(&amp;quot;NAME&amp;quot;=&amp;quot;Borough&amp;quot;))

# get coords
coords &amp;lt;- resulthex_sf %&amp;gt;%
  # find polygon centroids (sf points object)
  st_centroid %&amp;gt;%
  # extract the coordinates of these points as a matrix
  st_coordinates

# insert centroid long and lat fields as attributes of polygons
resulthex_sf$long &amp;lt;- coords[,1]
resulthex_sf$lat &amp;lt;- coords[,2]

# get percentage change from baseline
resulthex_sf$pct_chg &amp;lt;- (resulthex_sf$`2016/17`- resulthex_sf$`2013/14`) / resulthex_sf$`2013/14`

# hex plot
ggplot(resulthex_sf) +
  geom_sf( aes(fill = pct_chg)) +
  geom_text(aes(long, lat, label=str_sub(NAME, 1, 4)), size = 2.5, color = &amp;#39;white&amp;#39;) +
  scale_fill_viridis_c(labels = percent) +
  coord_sf() +
  labs(title=&amp;quot;Where are homeless sightings becoming more frequent in London?&amp;quot;,
       subtitle=&amp;quot;People seen rough sleeping, % change 2013/14 to 2016/17 by borough&amp;quot;,
       caption=&amp;quot;@ewen_&amp;quot;) +
  theme_void() +
  theme(
    text = element_text(size = 9),
    plot.title = element_text(size = 12, face = &amp;quot;bold&amp;quot;), 
    plot.subtitle = element_text(size = 9),
    axis.ticks = element_blank(), 
    legend.direction = &amp;quot;vertical&amp;quot;, 
    legend.position = &amp;quot;right&amp;quot;,
    legend.title=element_blank(),
    plot.margin = margin(1, 1, 1, 1, &amp;#39;cm&amp;#39;),
    legend.key.height = unit(1, &amp;quot;cm&amp;quot;), legend.key.width = unit(0.2, &amp;quot;cm&amp;quot;)
  ) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/hacking-homelessness-pdf-prisons_files/figure-html/hex_map-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;From PDF prison to üî• hex map with ease. May this inspire you to solve your own &lt;a href=&#34;https://twitter.com/hashtag/otherpeoplesdata?src=hash&#34;&gt;#otherpeoplesdata&lt;/a&gt; horror stories.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;on-a-more-serious-note&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;On a More Serious Note&lt;/h2&gt;
&lt;p&gt;I also hope that the seriousness of the subject matter was not forgotten. The rise in homelessness sightings is really bad. A major reason why getting hold of this homelessness data was so difficult is that organisations like St Mungo‚Äôs suffer from chronic under-funding, and so machine-readable data is understandably not their top priority. They are amazing so please consider &lt;a href=&#34;https://www.mungos.org/get-involved/donate/&#34;&gt;donating to them&lt;/a&gt; if you can, and others like them below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.salvationarmyappeals.org.uk/site/Donation2;jsessionid=00000000.app203a?idb=2000701064&amp;amp;df_id=2425&amp;amp;mfc_pref=T&amp;amp;2425.donation=form1&amp;amp;NONCE_TOKEN=DA7336ADD131AA3751E20B98219A74D7&amp;amp;utm_campaign=GRANT&amp;amp;utm_source=Google&amp;amp;utm_content=Phrase&amp;amp;utm_medium=PPC&amp;amp;gclsrc=aw.ds&amp;amp;utm_term=homeless&amp;amp;gclid=Cj0KCQiA84rQBRDCARIsAPO8RFzawzfPkv1IMLJYy1LxToJvUthor11u6VKSmGbx2xOuRyD3ssUNm2YaAv9jEALw_wcB&#34;&gt;The Salvation Army&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://donate.barnardos.org.uk/?ref=112326&amp;amp;gclid=Cj0KCQiA84rQBRDCARIsAPO8RFz9vr7leNhxRGfSouzzwJ4eY55HBLGh5VAcyCNA7EctyTbM7UYmmrQaAotFEALw_wcB&#34;&gt;Barnardo‚Äôs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://centrepoint.org.uk/donate/&#34;&gt;centre point&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;To keep the post concise I don‚Äôt show all of the code, especially code that generates figures. But you can find the full code &lt;a href=&#34;https://github.com/rbind/ewenme/blob/master/content/blog/hacking-homelessness-pdf-prisons.Rmd&#34;&gt;here&lt;/a&gt;.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My Linear(ish) Programming Fantasy</title>
      <link>https://ewen.io/2017/11/06/my-linearish-programming-fantasy/</link>
      <pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2017/11/06/my-linearish-programming-fantasy/</guid>
      <description>&lt;script src=&#34;https://ewen.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://ewen.io/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://ewen.io/rmarkdown-libs/datatables-css/datatables-crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://ewen.io/rmarkdown-libs/datatables-binding/datatables.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://ewen.io/rmarkdown-libs/dt-core/css/jquery.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;https://ewen.io/rmarkdown-libs/dt-core/css/jquery.dataTables.extra.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://ewen.io/rmarkdown-libs/dt-core/js/jquery.dataTables.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://ewen.io/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://ewen.io/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Linear_programming&#34;&gt;Linear optimization&lt;/a&gt; (AKA linear programming) is all around us, even if we don‚Äôt really know it. For example, how did you come to pick your route to work today? This decision, lovingly known as ‚Äúgetting from A to B‚Äù, is (most of the time) objectively simple: &lt;strong&gt;which route is the quickest?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-11-06-Linear_Programming_Fantasy/route-icon.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are known variables that we need to identify and use in solving this problem (known as &lt;strong&gt;decision variables&lt;/strong&gt;), for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The speed at which different modes of transports travel&lt;/li&gt;
&lt;li&gt;The distance of each possible route&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As anyone who has ever travelled anywhere will know, there are other parameters that we might want to factor in to a solution. We might prefer to avoid certain modes of transport outright, spend less time walking, etc. Extending this problem to a business setting (not to knock anyone rocking it in their daily life), when there might be additional restrictions to consider (think of a delivery order operation) - minimizing fuel consumption, or avoiding tolls. Any ‚Äòbest route‚Äô can be reviewed to ensure these &lt;strong&gt;constraints&lt;/strong&gt; are taken care of.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-11-06-Linear_Programming_Fantasy/route-plan-anim.gif&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;let-me-optimize-your-fantasy&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Let Me Optimize Your Fantasy&lt;/h2&gt;
&lt;p&gt;What good can these techniques do for me? I‚Äôd come across a couple of nice implementations of linear programming techniques in the &lt;a href=&#34;https://fantasy.premierleague.com/&#34;&gt;Fantasy Premier League&lt;/a&gt;(FPL) space - shout out to Martin Eastwood for his &lt;a href=&#34;https://github.com/martineastwood/penalty/tree/master/fantasy_football_optimiser&#34;&gt;penalty&lt;/a&gt; work and Torvaney‚Äôs &lt;a href=&#34;https://github.com/Torvaney/fpl-optimiser&#34;&gt;fpl-optimiser&lt;/a&gt; (honorable mention to Sean Taylor‚Äôs &lt;a href=&#34;https://gist.github.com/seanjtaylor/b4d423dad0083cc8cc5b2a9fd1e4e63e&#34;&gt;NFL fantasy projections&lt;/a&gt;in R, but the sport/techniques involved are out of scope just now). Both of these projects look to optimize the same thing: the &lt;strong&gt;total number of points&lt;/strong&gt; a fantasy football team scores within some shared constraints that the game rules enforce (staying within a 100 million budget, no more than 3 players per team).&lt;/p&gt;
&lt;p&gt;There are some obvious weaknesses to this approach - the game is played on a weekly basis, with player‚Äôs points scoring varying significantly from week-to-week. ‚ÄòManagers‚Äô (users of the game) are also asked to select 11 players from their 15-man squad to play each week. These solutions optimize player selection based on the points returned over a whole season, and so don‚Äôt try and emulate these game mechanics. I‚Äôll try and work on this now, in one particular area of the game.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;complementary-keepers-and-where-to-find-them&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Complementary Keepers (and Where to Find Them)&lt;/h2&gt;
&lt;p&gt;Rotation - the practice of picking complementary players (those who play at home on alternate weeks, for example) to play in a rotating fashion - is squad-based fantasy sport game 101, allowing managers to seamlessly segue between class acts across a well-balanced squad.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-11-06-Linear_Programming_Fantasy/rotation-wrong.gif&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Rotation policy is at it‚Äôs simplest when applied to goalkeepers. The constraints are simple: you have to buy two, but you can only play one each week. This encourages FPL managers to look at a couple of cheaper options that play home &amp;amp; away alternately, for example, rather than lumping for premium products. Which strategy wins out, though? Lets re-frame this as a real-world linear optimization problem, defining the pieces we need.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;decision-variables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Decision Variables&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;decision variables&lt;/strong&gt; comprise the things that will decide the output and represent the solution. In our case, these are the points scored by the two goalkeepers we pick - let‚Äôs call them Goalkeeper A and Goalkeeper B. It‚Äôs also worth noting the &lt;strong&gt;non-negativity restriction&lt;/strong&gt; on decision variables i.e.¬†the values should be greater than or equal to zero.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:auto;&#34; class=&#34;datatables html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;filter&#34;:&#34;none&#34;,&#34;data&#34;:[[2,94,240,260,375,1,74,95,96,135,189,213,214,241,261,306,328,376,559,29,30,54,75,115,136,137,163,190,287,305,329,350,396,397,421,438,439,469,473,479,530,536,565,3,31,53,116,162,262,286,351,420,506,529,540,545,547,549,554,555,557,566,569],[&#34;Cech&#34;,&#34;Courtois&#34;,&#34;Ederson&#34;,&#34;de Gea&#34;,&#34;Lloris&#34;,&#34;Ospina&#34;,&#34;Heaton&#34;,&#34;Eduardo&#34;,&#34;Caballero&#34;,&#34;Pickford&#34;,&#34;Schmeichel&#34;,&#34;Mignolet&#34;,&#34;Karius&#34;,&#34;Bravo&#34;,&#34;Romero&#34;,&#34;Forster&#34;,&#34;Butland&#34;,&#34;Vorm&#34;,&#34;Macey&#34;,&#34;Begovic&#34;,&#34;Boruc&#34;,&#34;Ryan&#34;,&#34;Robinson&#34;,&#34;Hennessey&#34;,&#34;Robles&#34;,&#34;Stekelenburg&#34;,&#34;L√∂ssl&#34;,&#34;Hamer&#34;,&#34;Darlow&#34;,&#34;McCarthy&#34;,&#34;Grant&#34;,&#34;Fabianski&#34;,&#34;Pantilimon&#34;,&#34;Gomes&#34;,&#34;Foster&#34;,&#34;Adri√°n&#34;,&#34;Randolph&#34;,&#34;Pope&#34;,&#34;Jakupovic&#34;,&#34;Hart&#34;,&#34;Ward&#34;,&#34;Karnezis&#34;,&#34;Gazzaniga&#34;,&#34;Martinez&#34;,&#34;Federici&#34;,&#34;M√§enp√§√§&#34;,&#34;Speroni&#34;,&#34;Coleman&#34;,&#34;Joel Pereira&#34;,&#34;Elliot&#34;,&#34;Nordfeldt&#34;,&#34;Myhill&#34;,&#34;Taylor&#34;,&#34;Woodman&#34;,&#34;Krul&#34;,&#34;Legzdins&#34;,&#34;Green&#34;,&#34;Ramsdale&#34;,&#34;Lindegaard&#34;,&#34;Henry&#34;,&#34;Palmer&#34;,&#34;Whiteman&#34;,&#34;Haugaard&#34;],[&#34;Arsenal&#34;,&#34;Chelsea&#34;,&#34;Man City&#34;,&#34;Man Utd&#34;,&#34;Spurs&#34;,&#34;Arsenal&#34;,&#34;Burnley&#34;,&#34;Chelsea&#34;,&#34;Chelsea&#34;,&#34;Everton&#34;,&#34;Leicester&#34;,&#34;Liverpool&#34;,&#34;Liverpool&#34;,&#34;Man City&#34;,&#34;Man Utd&#34;,&#34;Southampton&#34;,&#34;Stoke&#34;,&#34;Spurs&#34;,&#34;Arsenal&#34;,&#34;Bournemouth&#34;,&#34;Bournemouth&#34;,&#34;Brighton&#34;,&#34;Burnley&#34;,&#34;Crystal Palace&#34;,&#34;Everton&#34;,&#34;Everton&#34;,&#34;Huddersfield&#34;,&#34;Leicester&#34;,&#34;Newcastle&#34;,&#34;Southampton&#34;,&#34;Stoke&#34;,&#34;Swansea&#34;,&#34;Watford&#34;,&#34;Watford&#34;,&#34;West Brom&#34;,&#34;West Ham&#34;,&#34;West Ham&#34;,&#34;Burnley&#34;,&#34;Leicester&#34;,&#34;West Ham&#34;,&#34;Liverpool&#34;,&#34;Watford&#34;,&#34;Spurs&#34;,&#34;Arsenal&#34;,&#34;Bournemouth&#34;,&#34;Brighton&#34;,&#34;Crystal Palace&#34;,&#34;Huddersfield&#34;,&#34;Man Utd&#34;,&#34;Newcastle&#34;,&#34;Swansea&#34;,&#34;West Brom&#34;,&#34;Southampton&#34;,&#34;Newcastle&#34;,&#34;Brighton&#34;,&#34;Burnley&#34;,&#34;Huddersfield&#34;,&#34;Bournemouth&#34;,&#34;Burnley&#34;,&#34;Crystal Palace&#34;,&#34;West Brom&#34;,&#34;Spurs&#34;,&#34;Stoke&#34;],[5.5,5.5,5.5,5.5,5.5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4.5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]],&#34;container&#34;:&#34;&lt;table class=\&#34;display\&#34;&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt;player_id&lt;\/th&gt;\n      &lt;th&gt;web_name&lt;\/th&gt;\n      &lt;th&gt;team_name&lt;\/th&gt;\n      &lt;th&gt;start_price&lt;\/th&gt;\n    &lt;\/tr&gt;\n  &lt;\/thead&gt;\n&lt;\/table&gt;&#34;,&#34;options&#34;:{&#34;columnDefs&#34;:[{&#34;className&#34;:&#34;dt-right&#34;,&#34;targets&#34;:[0,3]}],&#34;order&#34;:[],&#34;autoWidth&#34;:false,&#34;orderClasses&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;This list of goalies represents our options for goalkeeper A and goalkeeper B, with their respective teams and associated costs. Now, we specify the ultimate objective that guides this decision.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;objective-function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Objective Function&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;objective function&lt;/strong&gt; summarizes the objective of making decisions (i.e.¬†picking goalkeepers). Ultimately, we want to score as many points as possible per unit cost (we‚Äôll leave the value aspect of this function, for now). First, it‚Äôs necessary to identify point-scoring patterns at a weekly level, so lets examine an example goalkeeping pair‚Äôs points.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/linear-programming-fantasy_files/figure-html/goalies_plot-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are a few things at play in the above plot, which shows the points scored by week for Chelsea‚Äôs Courtois and Arsenal‚Äôs Cech. Not only can we identify the level of points these players score individually, but how well the patterns of point-scoring complement each other (i.e.¬†do they score well in alternate weeks).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;constraints&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Constraints&lt;/h2&gt;
&lt;p&gt;This brings us nicely into the world of &lt;strong&gt;constraints&lt;/strong&gt;, or the restrictions placed on our decision variables (goalkeeper A and goalkeeper B):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only one of Goalkeeper A and Goalkeeper B can play (and, in turn, collect points) on any given gameweek&lt;/li&gt;
&lt;li&gt;We don‚Äôt want to make any transfers in this position (‚Äòmanagers‚Äô have the opportunity to switch a player in their squad for someone else each week)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There would be other constraints if we were to extrapolate this problem to cover the whole team (e.g.¬†only three players from a particular team are allowed in a squad, 100 million budget, no. of players required in each position). We‚Äôll also make the simplifying assumption here that in any prospective goalie pair, the ‚Äòmanager‚Äô always plays the keeper who scores the most points that week (in linear world, all of this is possible‚Ä¶).&lt;/p&gt;
&lt;p&gt;We‚Äôve successfully identified the facets of our problem in the language of linear optimization, so‚Ä¶we have a linear programming problem! Seems straightforward enough, right? Let‚Äôs see how it all goes down.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;goalie-go-round&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Goalie-Go-Round&lt;/h2&gt;
&lt;p&gt;Based on the parameters outlined previously, an implementation of linear programming would go something something like:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Cycle through every possible pair of FPL goalkeepers&lt;/li&gt;
&lt;li&gt;For each gameweek, pick the goalie who scored the most points&lt;/li&gt;
&lt;li&gt;Tally up the total points potential for each pair&lt;/li&gt;
&lt;li&gt;Work out the points-per-million value (total points potential / total price)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It‚Äôs worth pointing out that I didn‚Äôt use &lt;a href=&#34;https://cran.r-project.org/web/packages/lpSolve/lpSolve.pdf&#34;&gt;&lt;code&gt;lpSolve&lt;/code&gt;&lt;/a&gt;, R‚Äôs interface to &lt;a href=&#34;http://lpsolve.sourceforge.net/5.5/&#34;&gt;lpsolve&lt;/a&gt;(well-known linear programming OSS), which would be advisable in a situation when the problem‚Äôs level of complexity is greater than that seen here. I was interested in seeing how I could fare with a &lt;code&gt;tidyverse&lt;/code&gt;-friendly (thanks to the beast that is &lt;code&gt;purrr&lt;/code&gt;) implementation.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; Here‚Äôs a function that does the first three steps listed above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# function to get points potential for all rotations with a given player
rotate_all &amp;lt;- function(data, id_player) {
  
  # get named player&amp;#39;s points
  player_points &amp;lt;- data %&amp;gt;%
    # match player id to inputs
    dplyr::filter(player_id == id_player) %&amp;gt;%
    # keep points
    dplyr::select(round, player_id, total_points)
  
  # get all other player points
  other_points &amp;lt;- data %&amp;gt;%
    # match player id to inputs
    dplyr::filter(player_id != id_player) %&amp;gt;%
    # keep points
    dplyr::select(round, player_id, total_points)
  
  # nest the other players&amp;#39; points
  other_points_nested &amp;lt;- other_points %&amp;gt;%
    split(.$player_id)
  
  # now, a function to get named player / other players&amp;#39; potential points
  collect_points &amp;lt;- function(x) { 
    
    # get max points for each round
    x &amp;lt;- x %&amp;gt;%
    dplyr::group_by(round) %&amp;gt;%
    dplyr::summarise(best_points=max(total_points))
    
    # get max points total
    max_points_total &amp;lt;- sum(x$best_points)
  }
  
  # iterate through other players to compare points to named player
  points_compare &amp;lt;- other_points_nested %&amp;gt;%
    purrr::map(~dplyr::bind_rows(., player_points)) %&amp;gt;%
    purrr::map(~collect_points(.))
  
  # create df from named list
  points_compare &amp;lt;- stack(points_compare)
  
  # set colnames
  points_compare &amp;lt;- points_compare %&amp;gt;%
    dplyr::mutate(player_id=id_player) %&amp;gt;%
    dplyr::select(player_id, rotation_player_id=ind, points=values)
  
  # convert factor to numeric
  points_compare$rotation_player_id &amp;lt;- as.numeric(as.character(points_compare$rotation_player_id))
  
  return(points_compare)
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This implementation tells us how a single goalie does when paired with everyone else. Let‚Äôs iterate this iteration (iter‚Ä¶ception?) for all unique goalkeepers, then grab the player metadata (note the &lt;a href=&#34;https://www.tidyverse.org/articles/2017/10/glue-1.2.0/&#34;&gt;&lt;code&gt;glue&lt;/code&gt;&lt;/a&gt; cameo - looking forward to getting deep with this dope package in future) and calculate our ‚Äòvalue‚Äô metric (points / price).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get points rotation for all goalies
goalie_rotation &amp;lt;- lapply(unique(goalie_data$player_id), rotate_all, data=goalie_data)

# bind these runs together
goalie_rotation &amp;lt;- bind_rows(goalie_rotation) %&amp;gt;%
  # get unique goalie combos
  mutate(key = paste0(pmin(player_id, rotation_player_id), pmax(player_id, rotation_player_id), 
                      sep = &amp;quot;&amp;quot;)) %&amp;gt;% 
  distinct(key, .keep_all = TRUE) %&amp;gt;%
  select(-key)

# join on the player metadata
goalie_rotation &amp;lt;- goalie_rotation %&amp;gt;%
  # join original player
  left_join(unique_goalies, by=&amp;quot;player_id&amp;quot;) %&amp;gt;%
  # join rotation pplayer
  left_join(unique_goalies, by=c(&amp;quot;rotation_player_id&amp;quot;=&amp;quot;player_id&amp;quot;)) %&amp;gt;%
  # rename cols
  rename(player_name=web_name.x, team_name=team_name.x, start_price=start_price.x,
         rotation_player_name=web_name.y, rotation_team_name=team_name.y, 
         rotation_start_price=start_price.y) %&amp;gt;%
  # add total value col and name col
  mutate(total_price=start_price+rotation_start_price,
         combo=glue(&amp;quot;{player_name} ({team_name}) &amp;amp; {rotation_player_name} ({rotation_team_name}) &amp;quot;),
         points_per_mil=points/total_price)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We‚Äôre ready to see the optimized goalkeeping combo, maximizing potential points return while minimizing costs [insert drum roll]. I‚Äôll leave in the top ten, for some context.&lt;/p&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-4&#34;&gt;Table 1: &lt;/span&gt;Top goalkeeper combos (optimized on points per million)
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Combo
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Points
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Cost
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Points per million
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
L√∂ssl (Huddersfield) &amp;amp; Hart (West Ham)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: block; padding: 0 4px; border-radius: 4px; background-color: #ffa500&#34;&gt;9.0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 100.00%&#34;&gt;8.9&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
L√∂ssl (Huddersfield) &amp;amp; Fabianski (Swansea)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
79
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: block; padding: 0 4px; border-radius: 4px; background-color: #ffa500&#34;&gt;9.0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 98.88%&#34;&gt;8.8&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
L√∂ssl (Huddersfield) &amp;amp; Pope (Burnley)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
79
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: block; padding: 0 4px; border-radius: 4px; background-color: #ffa500&#34;&gt;9.0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 98.88%&#34;&gt;8.8&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Elliot (Newcastle) &amp;amp; Pope (Burnley)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
74
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: block; padding: 0 4px; border-radius: 4px; background-color: #ffffff&#34;&gt;8.5&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 97.75%&#34;&gt;8.7&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fabianski (Swansea) &amp;amp; Pope (Burnley)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: block; padding: 0 4px; border-radius: 4px; background-color: #ffa500&#34;&gt;9.0&lt;/span&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 97.75%&#34;&gt;8.7&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So, Messrs Hart and Lossl grab top spot when accounting for both points and cost in our quest for optimization. This season, that combination returned a points potential of 70 while costing a combined 9 million, which works out at 7.8 points per million.&lt;/p&gt;
&lt;p&gt;Before finishing up, let‚Äôs consider how the solution might change if a new constraint is introduced. What if an FPL manager doesn‚Äôt have the budget for some of these recommendations, anyway? What recommendations would we make if cost was an enforced constraint - for example, a remaining budget of 9 million?&lt;/p&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-5&#34;&gt;Table 2: &lt;/span&gt;Top goalkeeper combos for 9 million or less (optimized on points per million)
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Combo
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Points
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Cost
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Points per million
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
L√∂ssl (Huddersfield) &amp;amp; Hart (West Ham)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 100.00%&#34;&gt;8.9&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
L√∂ssl (Huddersfield) &amp;amp; Fabianski (Swansea)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
79
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 98.88%&#34;&gt;8.8&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
L√∂ssl (Huddersfield) &amp;amp; Pope (Burnley)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
79
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 98.88%&#34;&gt;8.8&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Elliot (Newcastle) &amp;amp; Pope (Burnley)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
74
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8.5
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 97.75%&#34;&gt;8.7&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fabianski (Swansea) &amp;amp; Pope (Burnley)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
78
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9.0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;span style=&#34;display: inline-block; direction: rtl; border-radius: 4px; padding-right: 2px; background-color: lightgreen; width: 97.75%&#34;&gt;8.7&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Of course, the optimized solution remains the same in this case, but hopefully this helps illustrate how flexible linear programming can be in taking on new restrictions.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;wrap-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Wrap-up&lt;/h2&gt;
&lt;p&gt;The principles of linear optimization can be applied to many problems that have a fundamentally simple goal - in this case, scoring more fantasy points than all your mates. R is an ideal tool to get started with putting these concepts into practice. Go work on your own linear programming fantasies, y‚Äôall‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;To keep the post concise I don‚Äôt show all of the code, especially code that generates figures. But you can find the full code &lt;a href=&#34;https://github.com/rbind/ewenme/blob/master/content/blog/linear-programming-fantasy.Rmd&#34;&gt;here&lt;/a&gt;.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;The current Github repo I‚Äôm using for linear programming implementations in FPL is &lt;a href=&#34;https://github.com/ewenme/fplinear&#34;&gt;here&lt;/a&gt;, called fplinear.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Meet Dumb Hardwax</title>
      <link>https://ewen.io/2017/10/11/meet-dumb-hardwax/</link>
      <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2017/10/11/meet-dumb-hardwax/</guid>
      <description>&lt;p&gt;Twitter bots have gotten a fairly bad rap, recently &lt;a href=&#34;http://uk.businessinsider.com/twitter-russia-investigation-should-look-at-trump-interaction-with-bots-2017-10?r=US&amp;amp;IR=T&#34;&gt;(often with good reason)&lt;/a&gt;. When they‚Äôre done right, a genuinely quirky robot can cut through a feed full of humans with beautiful tidbits. God bless &lt;span class=&#34;citation&#34;&gt;[@tinycarebot]&lt;/span&gt;(&lt;a href=&#34;https://twitter.com/tinycarebot&#34; class=&#34;uri&#34;&gt;https://twitter.com/tinycarebot&lt;/a&gt;).&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;
&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;
üíü: please dont forget to text back your friends
&lt;/p&gt;
‚Äî here&#39;s your reminder (&lt;span class=&#34;citation&#34;&gt;@tinycarebot&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/tinycarebot/status/916319972112175105?ref_src=twsrc%5Etfw&#34;&gt;October 6, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Another thing that gives me life is reading &lt;a href=&#34;https://hardwax.com/&#34;&gt;Hardwax&lt;/a&gt;, a hugely influential Berlin record store, get excited about their new stock. Their snappy, idiosyncratic descriptions of new music is steeped in electronic music folklore. Gems like this are peppered all over:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúDancehall from cyberspace - awesomely fresh &amp;amp; fearless &amp;amp; full of Grime affinities‚Äù&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I could flick through this stuff all day, but as a Londoner I‚Äôm usually gonna pick up records from my local stores. This means I don‚Äôt get around to checking these as much as I should, which got me thinking - I wish I could have Hardwax reviews in my Twitter feed, or something. They even fit in to 140 characters most of the time‚Ä¶&lt;/p&gt;
&lt;p&gt;I‚Äôd &lt;em&gt;also&lt;/em&gt; been meaning to have a go at generating pseudo random text with Markov chains, after coming across &lt;a href=&#34;http://rmhogervorst.nl/cleancode/blog/2017/01/21/markov-chain.html&#34;&gt;Roel‚Äôs post here&lt;/a&gt;. For those that don‚Äôt know about this type of chain - &lt;a href=&#34;http://setosa.io/ev/markov-chains/&#34;&gt;here‚Äôs&lt;/a&gt; a wicked visual intro - in short they are mathematical systems that describe the probabilities of moving from one ‚Äústate‚Äù (or set of values) to another.&lt;/p&gt;
&lt;p&gt;Could there be potential to subvert this principle, knitting together words to form sentences, imitating this inimitable style? I‚Äôm envisaging a bot that spits out pseudo-Hardwax reviews, just for my sadistic enjoyment. Let‚Äôs get it.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;gettin-in-to-a-scrape&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Gettin‚Äô in to a scrape&lt;/h2&gt;
&lt;p&gt;First up, I went straight to the Hardwax web shop to get hold of the review/description text accompanying releases on there. This would serve as the corpus of text from which we can build our Markov chain review generator. Here‚Äôs what the release pages look like:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-10-11-Meet_Dumb_Hardwax/hardwax_site.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Those bits circled in red? &lt;em&gt;Those&lt;/em&gt; are the Hardwax reviews. I was able to put together a fairly simple function (leaning heavily on &lt;code&gt;rvest&lt;/code&gt;) to scrape them.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# web scraper for hardwax reviews
hardwax_scrape &amp;lt;- function(page, no) {
  
  # construct url
  x &amp;lt;- paste0(&amp;quot;https://hardwax.com/&amp;quot;, page, &amp;quot;/?page=&amp;quot;, no, &amp;quot;&amp;amp;paginate_by=50&amp;quot;)
  
  # scrape reviews
  reviews &amp;lt;- x %&amp;gt;%
    read_html() %&amp;gt;%
    html_nodes(&amp;quot;p&amp;quot;) %&amp;gt;%
    html_text()
  
  return(reviews)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This simple URL structure meant the function could be easily applied for each section/genre on the site, like pulling the latest weeks new ish:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# scrape news
lapply(seq_along(1:2), hardwax_scrape, page=&amp;quot;this-week&amp;quot;) %&amp;gt;% unlist() %&amp;gt;% head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Flawless Acid Electro science by the truly professional grand master Carl Finlow&amp;quot;         
## [2] &amp;quot;Driving Electro Bass&amp;quot;                                                                     
## [3] &amp;quot;Stunning rhythm tracks somewhere in between leftfield Techno &amp;amp; Grime&amp;quot;                     
## [4] &amp;quot;Beautiful Ambient atmospheres &amp;amp; stepping House organics&amp;quot;                                  
## [5] &amp;quot;One sided 12\&amp;quot; - blinding, raw Proto-House reminiscent cut &amp;amp; noisy leftfield Electro trip&amp;quot;
## [6] &amp;quot;One sided 12\&amp;quot; - blinding, raw Proto-House reminiscent cut &amp;amp; noisy leftfield Electro trip&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the various sections were scraped, some data cleaning procedures (remove releases with no reviews, reviews longer than 140 characters, or duplicate reviews) ensured the reviews were fit for purpose to head on to the next stage.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;preppin-the-text&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preppin‚Äô the Text&lt;/h2&gt;
&lt;p&gt;Now we‚Äôre entering text mining territory, it‚Äôs time to call on the might of &lt;code&gt;tidytext&lt;/code&gt; to bring our body of text into forms suitable for Markov Chain text generation. A couple of wise steps should see us through.&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Word counts:&lt;/strong&gt; To aid the probabilistic elements of Markov chain text generation, we need an understanding of how many times words appear, in different contexts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No.¬†times words appear in corpus (all webstite review text)&lt;/li&gt;
&lt;li&gt;No.¬†times words appear at the beginning of a review (herein known as ‚Äòopeners‚Äô)&lt;/li&gt;
&lt;li&gt;No.¬†times words precede commas&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ngrams:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bigram counts (pairs of consecutive words)&lt;/li&gt;
&lt;li&gt;Trigram counts (groups of three consecutive words)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With the above tasks done, the ‚Äòfun‚Äô can really begin - crafting our first Hardwax review.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;my-bots-first-words&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;My Bot‚Äôs First Words&lt;/h2&gt;
&lt;p&gt;In short, my tactic here is to add a word on to the end of two existing words opening a pseudo-review (with words that usually follow that bigram being weighted more highly), this process continuing until a sentence is formed (of a specified length).&lt;/p&gt;
&lt;p&gt;Here‚Äôs a function that essentially performs a look-up on the trigram counts dataframe, filtering (non-standardly) based on a couple of inputs (the sentence ‚Äòopeners‚Äô) and returning the trigrams final word if possible. Otherwise, the bigram counts are filtered on the sentences current most recent word, and returns the final word again.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# function to return third word
return_third_word &amp;lt;- function(woord1, woord2){
  
  # sample a word to add to first two words
  woord &amp;lt;- trigram_counts %&amp;gt;%
    filter_(~word1 == woord1, ~word2 == woord2)
  
  if(nrow(woord) &amp;gt; 0) {
    woord &amp;lt;- sample_n(woord, 1, weight = n) %&amp;gt;%
      .[[&amp;quot;word3&amp;quot;]]
    
  } else {
    woord &amp;lt;- filter_(bigram_counts, ~word1 == woord2) %&amp;gt;%
      sample_n(1, weight = n) %&amp;gt;%
      .[[&amp;quot;word2&amp;quot;]]
  }
  
  # print
  woord
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above word generator function takes place iteratively as part of the below function to construct our review. Here, we again take two words in turn as inputs, along with an argument representing sentence length which will determine the no. of times we cycle through much of the function. Note, there is also the chance for commas to enter the review, based on the probability for words to precede them.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# capitalise first letter
firstup &amp;lt;- function(x) {
  substr(x, 1, 1) &amp;lt;- toupper(substr(x, 1, 1))
  x
}

generate_sentence &amp;lt;- function(word1, word2, sentencelength){
  
  # comma chance sample
  commas &amp;lt;- sample(0:100, 1)
  
  # choosing to add a comma based on probabilities
  if(commas &amp;lt;= as.numeric(word1$comma_prob)) {
    sentence &amp;lt;- paste(word1$word, &amp;quot;, &amp;quot;, word2$word, sep=&amp;quot;&amp;quot;)
  } else {
    sentence &amp;lt;- c(word1$word, word2$word)
  }
  
  # starting to add words
  woord1 &amp;lt;- word1$word
  woord2 &amp;lt;- word2$word
  for(i in seq_len(sentencelength)){
    
    commas &amp;lt;- sample(0:100, 1)
    
    word &amp;lt;- return_third_word( woord1, woord2)
    
    word &amp;lt;- left_join(as_data_frame(word), word_counts, by=c(&amp;quot;value&amp;quot;=&amp;quot;word&amp;quot;))
    
    if(commas &amp;lt;= as.numeric(word$comma_prob)) {
      sentence &amp;lt;- c(sentence, &amp;quot;, &amp;quot;, word$value[1])
    } else {
      sentence &amp;lt;- c(sentence, word$value[1])
    }
    
    woord1 &amp;lt;- woord2
    woord2 &amp;lt;- word$value[1]
  }
  
  # paste sentence together
  output &amp;lt;- paste(sentence, collapse = &amp;quot; &amp;quot;)
  output &amp;lt;- str_replace_all(output, &amp;quot; ,&amp;quot;, &amp;quot;,&amp;quot;)
  output &amp;lt;- str_replace_all(output, &amp;quot;  &amp;quot;, &amp;quot; &amp;quot;)
  
  # add suffix sometimes
  tip_n &amp;lt;- sample(1:20, 1)
  if(tip_n %in% c(1, 2)){
    output &amp;lt;- paste(output, &amp;quot;- TIP!&amp;quot;)
  } else if(tip_n %in% c(3, 4)){
    output &amp;lt;- paste(output, &amp;quot;(one per customer)&amp;quot;)
  } else if(tip_n %in% c(5)){
    output &amp;lt;- paste(output, &amp;quot;- Killer!&amp;quot;)
  } else if(tip_n %in% c(6, 7)){
    output &amp;lt;- paste(output, &amp;quot;- Warmly Recommended!&amp;quot;)
  } else if(tip_n %in% c(8, 9)){
    output &amp;lt;- paste(output, &amp;quot;- Highly Recommended!&amp;quot;)
  } else if(tip_n %in% c(10, 11)){
    output &amp;lt;- paste(output, &amp;quot;(w/ download code)&amp;quot;)
  }
  
  # print
  firstup(output)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The penultimate part of this function appears odd - this is my final artistic flourish in the process. Hardwax infamously ended reviews with the phrase ‚ÄúTIP!‚Äù to indicate strong positive feelings about a piece of music (until this phenomena was later parodied in an artist‚Äôs track title, after which Hardwax went through the site to remove almost all traces). I‚Äôm bringing it back, along with some other of the shop‚Äôs favourite ways to end a review.&lt;/p&gt;
&lt;p&gt;Finally, we create a wrapper function for the word/sentence generator to be called at will - enter the (imaginatively titled) review generator!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# generate review
dumb_hardwax &amp;lt;- function(x) {
  a &amp;lt;- sample_n(opener_counts, size=1, weight = n)
  b &amp;lt;- sample_n(word_counts, size=1, weight = n)
  len &amp;lt;- sample(5:12, 1)
  
  generate_sentence(word1=a, word2=b, sentencelength=len)
}

dumb_hardwax()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Industrial, dense big room techno album in gatefold cover dubbed out dj&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Look at that - the bot made it‚Äôs first review. Lets share it with the world‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;twittering&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;TwitteRing&lt;/h2&gt;
&lt;p&gt;At this point, we can freely generate a simulated Hardwax review, but it‚Äôs still just lurking in the R console. To bridge the Twitter-shaped gap, &lt;code&gt;rtweet&lt;/code&gt; gets us there. I won‚Äôt go into authentication/set-up details here - you should visit the packages &lt;a href=&#34;http://rtweet.info/&#34;&gt;dedicated site&lt;/a&gt; for all that (or check the footnotes for the GitHub repo and dig there). Once we‚Äôve made a twitter app and authenticated R to post on our behalf, we‚Äôre tweeting in one line yo‚Äô:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# post tweet
post_tweet(status = dumb_hardwax(), token = twitter_token)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nice. I can generate pseudo-Hardwax reviews and share them with anyone who cares. Still, I need to actually press ‚Äògo‚Äô, which is a bit of a problem. I have to eat, sleep, work, all that stuff, unfortunately - which means this bot is only tweeting when I get around to making one happen myself. There‚Äôs always &lt;code&gt;cronR&lt;/code&gt;, which is a great way to schedule tasks on my machine, but what if my machine is dead? The people need their reviews, and I don‚Äôt want this burden on my shoulders. There‚Äôs gotta be a way‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;up-in-the-clouds&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Up in the Clouds&lt;/h2&gt;
&lt;p&gt;After some ambling around the hottest cloud providers (namely - AWS, Google Cloud and Azure), I settled on a particular branch of the latter known as &lt;a href=&#34;https://azure.microsoft.com/en-us/services/functions/&#34;&gt;Azure Functions&lt;/a&gt;. While R isn‚Äôt natively supported, it offers an array of ‚Äòtriggers‚Äô, including timer (executes a Function on a schedule), which perfectly fit my needs for a simple tweetbot. By using GitHub as the deployment source, a continuous deployment workflow is possible so I can update the corpus later on, with the tweets adjusting accordingly. Dope!&lt;/p&gt;
&lt;p&gt;I stumbled across an impeccable tutorial &lt;a href=&#34;https://github.com/thdeltei/azure-function-r&#34;&gt;here&lt;/a&gt; to guide me through the steps to deployment. Like with &lt;code&gt;rtweet&lt;/code&gt;, I‚Äôm not going to spend time repeating what someone else has covered with aplomb - just read that guide (and check the ins and outs of my repo if you really have to), you‚Äôll be fine. I would just say that when it comes to running the script for the first time, during which you‚Äôll need to install any packages used, the free plan does struggle to get done in five minutes (the default calculation time allowed on the consumption plan) - you can up this to ten minutes by following the &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale&#34;&gt;hosting plans documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;meet-dumb-hardwax&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Meet Dumb Hardwax&lt;/h2&gt;
&lt;p&gt;My work is done - introducing &lt;span class=&#34;citation&#34;&gt;[@dumb_hardwax]&lt;/span&gt;(&lt;a href=&#34;https://twitter.com/dumb_hardwax&#34; class=&#34;uri&#34;&gt;https://twitter.com/dumb_hardwax&lt;/a&gt;). Trying it‚Äôs hardest to make Hardwax gold once an hour.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-10-11-Meet_Dumb_Hardwax/dumb_hardwax.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well, the result is incredibly niche, but if you‚Äôve made it this far, I‚Äôm sure you already have great plans for a uniquely useless bot (made with love).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;To keep the post concise I don‚Äôt show all of the code, especially code that generates figures. But you can find the full code &lt;a href=&#34;https://github.com/rbind/ewenme/blob/master/content/blog/meet-dumb-hardwax.Rmd&#34;&gt;here&lt;/a&gt;.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Because the website isn‚Äôt static (i.e.¬†the release pages change), the workflow is not entirely reproducible. While the code provided here will scrape, clean data etc., the end-to-end result may be different. Please refer to the &lt;a href=&#34;https://github.com/ewenme/hardwax_bot/blob/master/review%20scrape.R&#34;&gt;scrape&lt;/a&gt;, &lt;a href=&#34;https://github.com/ewenme/hardwax_bot/blob/master/review%20clean.R&#34;&gt;clean&lt;/a&gt; and &lt;a href=&#34;https://github.com/ewenme/hardwax_bot/blob/master/hardwax_bot.R&#34;&gt;bot&lt;/a&gt; scripts hosted on GitHub for a full audit trail of the code used to create the current version of Dumb Hardwax.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Given that &lt;a href=&#34;(http://rmhogervorst.nl/cleancode/blog/2017/01/21/markov-chain.html)&#34;&gt;Roel‚Äôs post&lt;/a&gt; covers a lot of the same word count/bigram/trigram processing steps that I did, check that out if you wanted more commentary around the code used during the process.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Unravelling the European Football Transfer Window</title>
      <link>https://ewen.io/2017/09/07/unravelling-the-european-football-transfer-window/</link>
      <pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2017/09/07/unravelling-the-european-football-transfer-window/</guid>
      <description>&lt;p&gt;Followers of European football will be familiar with the infamous transfer window system, which endears clubs to buy and sell players in a specified period - once in the off-season (summer), and once at the turn of each calendar year. This constraint has invited increasingly peculiar and precarious market activity over the years, as clubs vie to secure the hottest new talents with varying parts method and madness. Meanwhile, fans lap up newspaper gossip columns and tell friends ‚Äúhe looks quality on YouTube‚Äù as they frantically research the latest ‚Äúwunderkind‚Äù their club has been linked with. It‚Äôs a truly beguiling collection of rituals and rhetoric (that I helplessly pander to each year).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-09-07-Dissecting_European_Football_Transfers/regulate.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The off-season transfer window closed shut recently, on August 31st across Germany, England, France and Italy. Spain got given slightly longer to finish their business, until the 1st September (a bizarre quirk that is befitting of such a madcap period). As a follower of (English) Premier League football, primarily, the way in which media outlets stoke up the tension here as the window draws to a close really has to be seen to be believed. Chief culprits include Sky Sports, who‚Äôs latest excruciating move in drama marginal gains includes presenters coordinating the colour of their clothes with the canary yellow news ticker on their rolling TV coverage of the window‚Äôs ‚Äòdeadline day‚Äô (caption competition, indeed).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-09-07-Dissecting_European_Football_Transfers/jimwhite.jpg&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Behind this cacophony of noise, what actually went down in the window? Hopefully, a proper look at the data can help reveal some truths and help me scratch this particular itch.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;some-tweets-i-made-earlier&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Some tweets I made earlier&lt;/h2&gt;
&lt;p&gt;In early skirmishes with transfer window data, I had managed to scrape &lt;a href=&#34;https://www.transfermarkt.co.uk/&#34;&gt;Transfermarkt‚Äôs&lt;/a&gt; site for player transfer data and produced some neat dumbbell-style plots that people seemed to get on with.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;
&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;
Premier league clubs&#39; summer transfer bizniz (as of today). Idea inspired by &lt;a href=&#34;https://twitter.com/Worville&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@Worville&lt;/span&gt;&lt;/a&gt;, execution by &lt;a href=&#34;https://twitter.com/hrbrmstr&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@hrbrmstr&lt;/span&gt;&lt;/a&gt;. &lt;a href=&#34;https://t.co/upHFzegZ1H&#34;&gt;pic.twitter.com/upHFzegZ1H&lt;/a&gt;
&lt;/p&gt;
‚Äî ewen (&lt;span class=&#34;citation&#34;&gt;@ewen_&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/ewen_/status/895930106908221440&#34;&gt;August 11, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;These nicely illustrated intra-league transfer window behaviour, highlighting big buyers and sellers (as well as club‚Äôs balances) relative to the league itself. One feature that may go unnoticed is the ranking of the y-axis - the clubs have been ordered by their final league position in the previous season (with the promoted clubs at the bottom). This decision means that clubs are proximal to others who demonstrated similar league performance (a reasonable proxy for team quality), and spend information can be compared non-arbitrarily in this way.&lt;/p&gt;
&lt;p&gt;However, there wasn‚Äôt any kind of time-stamp present in Transfermarkt‚Äôs collation of transfer data, which was a dimension I wanted to explore. I would have to try my luck elsewhere.&lt;/p&gt;
&lt;p&gt;Luckily for me, the Guardian ran a &lt;a href=&#34;https://www.theguardian.com/football/ng-interactive/2017/jun/22/transfer-window-2017-every-deal-in-europes-top-five-leagues&#34;&gt;transfer window interactive&lt;/a&gt; that included information about &lt;em&gt;when&lt;/em&gt; transfers happened. A quick &lt;code&gt;jsonlite&lt;/code&gt;/&lt;code&gt;lubridate&lt;/code&gt;/&lt;code&gt;dplyr&lt;/code&gt;/&lt;code&gt;forcats&lt;/code&gt; combo is all I needed to grab, parse and clean the data for my purposes (remember to head for the footnotes if you want the code relief).&lt;/p&gt;
&lt;p&gt;With that, the temporal aspect of the transfer window is ours.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;watching-the-window-go-by&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Watching the window go by&lt;/h2&gt;
&lt;p&gt;As mentioned earlier, there is a perceived high-stakes end to the window here in England, possibly fuelled by sensationalist third-parties in the media (among other factors). Given that the other major European leagues find their opportunities for business cut off at the same time, is there a widespread spike in business as the deadline approaches?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/dissecting-euro-football-transfers_files/figure-html/league%20joyplot-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We see the biggest peak in player buys, across all leagues, comes around the start of July (coinciding with the 1st July opening of the window). Business is done earlier than this date, as players agree moves prior to officially jumping ship. It appears that the quickest clubs to start moving are in Germany (Bundesliga), while the biggest spike near to the deadline is clearly in England (Premier League) as their clubs continue to do business later, relative to the others. It is hard to tell haw much media furore influences this late activity (a self-fulfilling prophecy, perhaps), and there are other factors to consider - even an executive‚Äôs hard negotiating style can make a club‚Äôs business likely to drag on.&lt;/p&gt;
&lt;p&gt;Another component is that of the loan market, which is a different beast - essentially, club‚Äôs (usually those less esteemed) borrowing players from another club, usually for a season. It may be that a league‚Äôs behaviour in this market differs from full transfers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/dissecting-euro-football-transfers_files/figure-html/loans-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ah - now we see what the other leagues were up to, closer to the deadline. It‚Äôs noticeable that permanent transfers are mostly done earlier, peaking in July as already mentioned, while loan business is more often than not left until the last knockings.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;following-the-money&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Following the money&lt;/h2&gt;
&lt;p&gt;We have an idea of the deadline day effect in transfer activity terms, but haven‚Äôt yet delved into the finances. I‚Äôm dying to know just how much business is left until those final hours.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/dissecting-euro-football-transfers_files/figure-html/deadline%20prop-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Huh. While over 13% of all transfer spend by the Premier League is done on the final day, it turns out that &lt;em&gt;nothing&lt;/em&gt; was spent on La Liga‚Äôs extra day (remember, this is disclosed fees only, and doesn‚Äôt include player loan deals). A failed experiment, perhaps, with the rest of the big leagues shutting up shop by then? Too soon to tell, but I‚Äôll be patiently waiting to see if the same thing happens next year‚Ä¶&lt;/p&gt;
&lt;p&gt;There are usually some headline-grabbing moves made each summer, and this one got a bit silly. Neymar moved to Paris Saint Germain for ¬£197 million, with fears about inequality in spending power reaching fever pitch.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/dissecting-euro-football-transfers_files/figure-html/league%20prop-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That deal I mentioned helped PSG on their way to sinking over 40% of the entire leagues business, in financial terms. If anyone from the Financial Fair Play (FFP - a real thing, promise) committee is reading - get at me.&lt;/p&gt;
&lt;p&gt;This doesn‚Äôt tell the full story - Neymar actually moved from Barca to PSG, so a lot of their spending was triggered by that whole palava, and clubs did business the other way of course. You can refer to my tweets at the start if you‚Äôre interested in how different clubs fared with their ‚Äúin‚Äôs and out‚Äôs‚Äù.&lt;/p&gt;
&lt;p&gt;Speaking of in‚Äôs and out‚Äôs, working with flow data lends itself nicely to some network visualisation. I‚Äôve banged on about who‚Äôs spending money, but what does this web of business look like?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/dissecting-euro-football-transfers_files/figure-html/flows-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Notice how little other leagues choose to plunder the Premier League‚Ä¶I‚Äôll leave that can of worms for another day.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;To keep the post concise I don‚Äôt show all of the code, especially code that generates figures. But you can find the full code &lt;a href=&#34;https://github.com/rbind/ewenme/blob/master/content/blog/dissecting-euro-football-transfers.Rmd&#34;&gt;here&lt;/a&gt;.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Transfer spend in this article refers to &lt;em&gt;disclosed fees only&lt;/em&gt;. The Guardian did make estimates of fees, where appropriate.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Advocating for Open Policing with sparklyr and Shiny</title>
      <link>https://ewen.io/2017/07/27/advocating-for-open-policing-with-sparklyr-and-shiny/</link>
      <pubDate>Thu, 27 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2017/07/27/advocating-for-open-policing-with-sparklyr-and-shiny/</guid>
      <description>&lt;p&gt;I don‚Äôt have much reason to dip in to big data processing tools in my current working capacity. Luckily for me, I have a (self-indulgent) blog now - perfect place to scratch these sorts of itches, and then share the resultant mishaps with the whole world.&lt;/p&gt;
&lt;p&gt;I‚Äôd recently been working on a &lt;a href=&#34;https://shiny.rstudio.com/&#34;&gt;Shiny&lt;/a&gt; app for increasing visibility and engagement with police violence data. It just so happened that I stumbled across &lt;a href=&#34;https://openpolicing.stanford.edu/&#34;&gt;Stanford‚Äôs Open Policing Project&lt;/a&gt;, with some hefty open data ripe for exploring with big data tools, right after the app‚Äôs first build was finished.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; I figured introducing these things together should make for a smooth read.&lt;/p&gt;
&lt;div id=&#34;stanfords-open-policing-project&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Stanford‚Äôs Open Policing Project&lt;/h2&gt;
&lt;p&gt;Stanford is, slowly but surely, compiling and standardizing data on vehicle and pedestrian stops from law enforcement departments across the U.S.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/iwOWcuFjNfw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;This information is being made freely available - not just the data, but everything needed to reproduce the analysis (&lt;a href=&#34;https://github.com/5harad/openpolicing&#34;&gt;repo in here&lt;/a&gt;). The data files for d/l have been heavily cleaned (sounds like some clean-up job, too), but the strong-stomached can contact the project team for access to the raw stuff.&lt;/p&gt;
&lt;p&gt;All the ingredients for a juicy pet project are in place, then, until I reach this sentence in the project overview:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúWe‚Äôve already gathered 130 million records from 31 state police agencies‚Ä¶‚Äù&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For those of us rocking modest MacBooks est. 2k13, introducing our machines to this magnitude of data may trigger a ripple in the space-time. Without any further ado, I‚Äôll move onto my next trick.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;introducing-sparklyr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introducing spark(lyr)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://spark.rstudio.com/&#34;&gt;sparklyr&lt;/a&gt; is R Studio‚Äôs interface to &lt;a href=&#34;https://spark.apache.org/&#34;&gt;Apache Spark&lt;/a&gt;, a pre-eminent open-source cluster-computing framework. The coup de gr√¢ce for sparklyr is it‚Äôs complete &lt;a href=&#34;https://github.com/hadley/dplyr&#34;&gt;dplyr&lt;/a&gt; back-end, meaning there isn‚Äôt too much unfamiliar code to see here.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The what-does-Spark-do TL;DR:
Spark makes programs run faster by utilising a distributed computing engine for expressive data processing. A useful analogy - now, you‚Äôre sending one person into a house to find something, whereas a distributed system sends someone into each room of the house and they communicate progress to each other.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What happens now? First off, the usual CRAN install/load one-two:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;sparklyr&amp;quot;)
library(sparklyr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Spark also needs to be installed locally. This is as simple as:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;spark_install()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Deploying Spark locally will be as far as this post goes. When you need it, you can find out more about cluster deployment &lt;a href=&#34;https://spark.apache.org/docs/2.1.1/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, there are all kinds of Spark configuration options at hand to change the behaviour of sparklyr and the cluster itself. I won‚Äôt go into extensive detail on this (Spark do, &lt;a href=&#34;https://spark.apache.org/docs/latest/spark-standalone.html&#34;&gt;here&lt;/a&gt;) - for now, I‚Äôll just initialize a &lt;code&gt;spark_config&lt;/code&gt; object with just the amount of memory used for the driver process set.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;config &amp;lt;- spark_config()
config[[&amp;quot;sparklyr.shell.driver-memory&amp;quot;]] &amp;lt;- &amp;quot;2G&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The final step of the sparklyr setup is to establish a connection to the Spark instance:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sc &amp;lt;- spark_connect(master = &amp;quot;local&amp;quot;, config = config)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;sc&lt;/code&gt; is now acting as a remote dplyr data source to the Spark cluster. Nice, but, there‚Äôs not much going on over there at the moment. Enter the data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;back-to-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Back to the Data&lt;/h2&gt;
&lt;p&gt;Stanford have made the police stops data available in a manageable way, as a series of &lt;a href=&#34;https://openpolicing.stanford.edu/data/&#34;&gt;data files&lt;/a&gt; (one for each state). I decided to take a look at Washington, which had all common fields available and relatively few data quality issues.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;
There are two main methods for getting data up into a Spark instance.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read data into R as normal, and then use sparklyr‚Äôs &lt;code&gt;copy_to&lt;/code&gt; function to copy the data over&lt;/li&gt;
&lt;li&gt;Read data directly into Spark Dataframes using &lt;code&gt;spark_read_csv&lt;/code&gt; (or another of sparklyr‚Äôs ‚Äòread‚Äô functions)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will be adopting the latter approach. The dataset in question is a not-to-be-sniffed-at 8+ million rows, so I don‚Äôt want to be doing much with it in-memory in R. So, here we go‚Ä¶&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;spark_read_csv(sc, name = &amp;quot;wa_stops&amp;quot;,
               path = &amp;quot;../data/WA-clean.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;‚Ä¶and, ~five minutes later, it‚Äôs showtime. The data has been copied into the Spark cluster, and I promise there‚Äôs no more session prep work.&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;hello-dplyr-my-old-friend&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;em&gt;‚ÄúHello dplyr, my old friend‚Äù&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;We can use all of your favourite dplyr moves to manipulate the data&lt;a href=&#34;#fn4&#34; class=&#34;footnote-ref&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;, and these computations will take place over in the cluster.&lt;/p&gt;
&lt;p&gt;Here‚Äôs an example of a dplyr transformation that returns a summary of the data grouped on several demographic fields.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# initiate spark data source
demog_stats &amp;lt;- tbl(sc, &amp;quot;wa_stops&amp;quot;) %&amp;gt;%
  # filter 2011-2015 date range
  filter(year(stop_date) &amp;gt;= 2011,
         year(stop_date) &amp;lt;= 2015) %&amp;gt;%
  # make search/hits boolean fields and a month field
  mutate(search=if_else(search_conducted == &amp;quot;TRUE&amp;quot;, 1, 0),
         hits=if_else(contraband_found == &amp;quot;TRUE&amp;quot;, 1, 0),
         month=month(stop_date)) %&amp;gt;%
  # group data by desired fields
  group_by(driver_race, driver_gender, driver_age, county_name,
           month) %&amp;gt;%
  # summary stats for stops, searches and hits
  summarise(n_stops=n(),
            n_searches=sum(search),
            n_hits=sum(hits)) %&amp;gt;%
  # remove grouping
  ungroup() %&amp;gt;%
  # drag data from spark to R
  collect()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Most of this will be familiar to the dplyr-literate. The function you might not be familiar with is &lt;code&gt;collect&lt;/code&gt;, which is the function that gets sparklyr to drop the query result into our R environment. It‚Äôs generally advisable not to do too much piping (%&amp;gt;%) at once, so you can debug your code adequately. You can use &lt;em&gt;compute&lt;/em&gt; to store query results in Spark within a temporary table, and take into a subsequent query.&lt;/p&gt;
&lt;p&gt;Once necessary data transformations have been done in Spark and collected in R‚Äôs environment, you can close the connection down, and it‚Äôs back to R for the analysis work.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;spark_disconnect(sc)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;monitoring-washingtons-police-stops&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Monitoring Washington‚Äôs Police Stops&lt;/h2&gt;
&lt;p&gt;First, a look at the trends of police stops, searches and ‚Äòhits‚Äô (searches finding contraband) over time. For comparative purposes, I‚Äôve used January 2011 as a baseline figure and measured percentage change from this baseline for each of these metrics.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/open-policing-sparklyr-shiny_files/figure-html/stop%20trend%20plot-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;While stops have remained pretty stable over time, there‚Äôs been a drop-off in searches and (an even bigger one) in hits. That is, apart from the immediate period following legalisation of marijuana possession for adults 21 and over at the end of February 2015 in D.C. - I‚Äôm hypothesizing that the police were extra vigilant during this period to make sure such a controversial law change was being followed to the letter.&lt;/p&gt;
&lt;p&gt;How has the police force itself fared over time? With the officer ID field, a proxy of the number of active officers on patrol can be established - I‚Äôve gone with the number of unique officer IDs making at least one stop in a month.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/open-policing-sparklyr-shiny_files/figure-html/active%20officers%20plot-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The force seems to be getting smaller. Notice that there‚Äôs also a clear seasonal component to the number of officers on patrol - maybe officers don‚Äôt really want to be out for too long in those winter months.&lt;/p&gt;
&lt;p&gt;There are fields in the data that can be used to get at racial disparities and possible bias in police behaviour. For example, the search/hits metrics from earlier can be taken a bit further and considered as rates based on stops and searches respectively. This study of outcomes may indicate discrimination.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/open-policing-sparklyr-shiny_files/figure-html/search/hit%20rates-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;While Black/Hispanic people are searched more often than Whites when searched, the hit rate (% of searches with contraband found) is lower for these minority groups, demonstrating the discrimination they face in this area.&lt;/p&gt;
&lt;p&gt;Is this phenomenon seen across country forces? Using the geographic data fields, it‚Äôs possible to identify regional trends.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/open-policing-sparklyr-shiny_files/figure-html/search/hit%20scatter-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The rate of searches is consistently higher amongst Black and Hispanic people, compared to Whites.The fact that there are a number of instances when the ‚Äòhit rate‚Äô is close to zero amongst searches of minority groups suggests that the threshold for searches, or standard of evidence needed to initiate a search, is lower than for whites.&lt;/p&gt;
&lt;p&gt;Quick word of warning - hit rates can be misleading. While a good indicator of discrimination, it‚Äôs not quite enough to infer racial bias. For example, suppose there are just two types of white drivers with either a 5% or 75% likelihood of carrying contraband. Suppose there are also just two types of black drivers: some black drivers have a 5% chance of carrying contraband, and the others have a 50% chance of carrying contraband. If a fair police officer only searches drivers with at least a 10% chance of carrying something illegal, the white hit rate would be 75% and the black hit rate would be 50%. The officer used the same standard to search each driver, and so did not discriminate, even though the hit rates differ.&lt;/p&gt;
&lt;p&gt;This was a taste of how Spark can be utilized to power large-scale analyses of police behaviour and profiling - I hope to revisit the data as more states join in (and perhaps do a comparison with our forces across the pond, someday).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;introducing-polmonitor-and-mapping-police-violence&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introducing polMonitor (and Mapping Police Violence)&lt;/h2&gt;
&lt;p&gt;polMonitor is a related pet project that has seen the light of day thanks to a herculean effort by &lt;a href=&#34;https://mappingpoliceviolence.org/&#34;&gt;Mapping Police Violence&lt;/a&gt; to compile data about police killings from several disparate sources (namely, FatalEncounters.org, the U.S. Police Shootings Database and KilledbyPolice.net).&lt;/p&gt;
&lt;p&gt;With all of this work going in to data collection, I was inspired to do whatever I could to make the data accessible and engaged with by more people, and ensure more accountable policing. To that end, I developed a Shiny app (now &lt;a href=&#34;https://ewenme.shinyapps.io/polMonitor/&#34;&gt;hosted over at shinyapps&lt;/a&gt;), or an interactive space for folks to immerse themselves in this data. Go see for yourself, and check the repo &lt;a href=&#34;https://github.com/ewenme/Vinylspotting&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/ewenme/polMonitor/raw/master/example.gif&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I‚Äôm not going to delve into the ins and outs of Shiny development, but I wanted to quickly mention a couple of helping hands I found with this one.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Going that extra 10 yards with &lt;a href=&#34;http://deanattali.com/shinyjs/&#34;&gt;shinyjs&lt;/a&gt;: Dean Attali‚Äôs Shiny package lets dummies like me do neat JavaScript tricks all over the shop. I particularly digged the &lt;code&gt;hidden&lt;/code&gt; function, which lets you choose bits of the app for the user to hide when not particularly useful.&lt;/li&gt;
&lt;li&gt;The GIS dream-team of &lt;a href=&#34;https://github.com/r-spatial/sf&#34;&gt;sf&lt;/a&gt; and &lt;a href=&#34;https://github.com/walkerke/tidycensus&#34;&gt;tidycensus&lt;/a&gt;: Boy did this package combo come through for me when it was a choropleth map situation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;wrap-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Wrap-up&lt;/h2&gt;
&lt;p&gt;I set out to learn a bit more about Spark and Shiny, and put a spotlight on critical policing issues in the process. The trickle down of new technologies can be slow to reach these kinds of spaces, but it‚Äôs as important as ever that there continues to be a pragmatic effort to expose discrimination and biases in systems and encourage open, accountable policing through good data science. Don‚Äôt hesitate to get stuck in.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;I hope to find time to incorporate Stanford‚Äôs police stops data into my app. At the time of writing, there‚Äôs still a lot of states missing from their data.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;On the d/l page, a table explains which fields are present in each data file. The GitHub repo‚Äôs &lt;a href=&#34;https://github.com/5harad/openpolicing/blob/master/README.md&#34;&gt;readme&lt;/a&gt; has detailed data quality information about each state, which you should review before getting stuck in.&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;Due to the sheer size of the data, I haven‚Äôt actually pushed it to GitHub. However, you can get it &lt;a href=&#34;https://openpolicing.stanford.edu/data/&#34;&gt;here&lt;/a&gt; (it‚Äôs the one called Washington).&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;I found that the extended tidyverse family of packages could be used with mixed results. For example, lubridate‚Äôs &lt;code&gt;year&lt;/code&gt; function worked OK, but not &lt;code&gt;wday&lt;/code&gt;. Therefore, some transformations may still need to be done in R. Keep up with updates over at the sparklyr &lt;a href=&#34;https://github.com/rstudio/sparklyr&#34;&gt;GitHub repo&lt;/a&gt;.&lt;a href=&#34;#fnref4&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>FPL Mythbusting with fplr</title>
      <link>https://ewen.io/2017/06/25/fpl-mythbusting-with-fplr/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2017/06/25/fpl-mythbusting-with-fplr/</guid>
      <description>&lt;p&gt;I recently authored my first R package (and definitely have the bug, now). It would be remiss of me to continue without a quick PSA for anyone out there thinking about dabbling in the package game - below is a shout-out of the invaluable resources I found along the way that kept me nice and sane.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;
&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;
ease in &lt;a href=&#34;https://t.co/NdRYGE1whA&#34;&gt;https://t.co/NdRYGE1whA&lt;/a&gt;&lt;br&gt;more detail &lt;a href=&#34;https://t.co/ypqotSAF46&#34;&gt;https://t.co/ypqotSAF46&lt;/a&gt;&lt;br&gt;best practice &lt;a href=&#34;https://t.co/qRMZDXBdfQ&#34;&gt;https://t.co/qRMZDXBdfQ&lt;/a&gt;&lt;br&gt;travis üíÄ &lt;a href=&#34;https://t.co/dEvM3PWsVb&#34;&gt;https://t.co/dEvM3PWsVb&lt;/a&gt;
&lt;/p&gt;
‚Äî ewen (&lt;span class=&#34;citation&#34;&gt;@ewen_&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/ewen_/status/872480326890795009&#34;&gt;June 7, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;I set out on my package contribution journey by focusing on the development of something that I myself would find useful (that way, I could keep at least one user happy). Each year, I play an edition of a fantasy sports game called &lt;a href=&#34;https://fantasy.premierleague.com/&#34;&gt;Fantasy Premier League&lt;/a&gt; (FPL), the official fantasy football game of England‚Äôs top football division. If you really want to know the in‚Äôs and out‚Äôs of FPL, there‚Äôs a &lt;a href=&#34;https://fantasy.premierleague.com/a/help&#34;&gt;section of the site&lt;/a&gt; just for rules.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TL;DR: for 38 rounds (called ‚Äògameweeks‚Äô), you pick a team of football players to do good things that score you points and help you finish as high up the leader-board as possible.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Introducing‚Ä¶&lt;a href=&#34;https://ewenme.github.io/fplr/&#34;&gt;&lt;code&gt;fplr&lt;/code&gt;&lt;/a&gt; - a package for the intersection of FPL players / R users like me (I hope it‚Äôs not just me) to explore the game‚Äôs data. In the rest of this post, I test drive the package by examining some aspects of the game that the community has long debated on. I won‚Äôt necessarily dispel/confirm all of these things here, but it‚Äôs a taster of what kinds of analyses can be spun up quickly using &lt;code&gt;fplr&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;the-early-season-rat-race&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The early season rat race&lt;/h2&gt;
&lt;p&gt;Many users emphasise the importance of a good start, claiming that it is more difficult to do well in the latter stages of the season without a solid foundation built early on. To illustrate this, lets look at the average shift in overall rank by gameweek in one of my mini-leagues (a smaller league amongst a peer group) as the season progresses i.e.¬†how much does a users rank change from week-to-week (N.B. in the current package version, I haven‚Äôt developed a function to help make this easier, yet. Soon come)?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/fpl-mythbusting-with-fplr_files/figure-html/rank%20changes-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The ‚Äúelbow‚Äù in this chart comes at a similar time to when my rank began to level off, somewhat. You might have noticed the spike in the penultimate gameweek - in this instance, lots of players actually played twice (known as a ‚Äúdouble gameweek‚Äù to insiders), meaning a greater opportunity for big swings in user rankings.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;team-value&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Team value&lt;/h2&gt;
&lt;p&gt;Another factor perceived to be important in gaining a healthy position for high scores is that of team value. As football players in the game perform well (or not so well), their price actually changes as a function of market forces i.e.¬†how many users are transferring them into/out of their team? By ‚Äòplaying the market‚Äô, users can build up the money at their disposal with which to build the best team. Therefore, perhaps we would expect someone‚Äôs final team value to be a good predictor of their final rank (N.B. one outlier was removed from this plot - sometimes people chase the team value as a game in itself, incurring lots of points penalties that drastically affect their team‚Äôs points total. This was one of those cases).&lt;/p&gt;
&lt;p&gt;To show a fairer picture, I have attempted to remove ‚Äòdead‚Äô users i.e.¬†users that have given up on the game, while their team continues to register scores. To eliminate these zombie teams, I chose to use transfers (bringing a player in for an existing squad player) as a proxy. It is fairly safe to assume that users remaining active until the season end are also making (at least some) transfers up until the end of the season, too. I‚Äôll consider users who made a transfer in one of the final three gameweeks as ‚Äòlive‚Äô.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/fpl-mythbusting-with-fplr_files/figure-html/team%20val-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There‚Äôs a moderate positive correlation, but plenty of variation as well - as was the case in our outlier, it is possible that users may chase team value at the expense of their league performance. Still, we can say that there appears to be a relationship between retaining a high team value and ranking highly.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;taking-hits&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;‚ÄúTaking Hits‚Äù&lt;/h2&gt;
&lt;p&gt;While one free transfer is permitted each week, users can make additional transfers at a cost of 4 points each - known as ‚Äútaking a hit‚Äù. This is a frequently toiled upon decision by FPL users, who must decide whether making this move will return a greater number of points (considering the penalty) than sticking. Perhaps the frequency someone incurs hits can tell us something about performance (again, I‚Äôve removed an outlier incurring a huge number of these).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/fpl-mythbusting-with-fplr_files/figure-html/hits-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It appears that taking hits has very little correlation with a user‚Äôs rank. This would suggest that there are indeed good ‚Äòhits‚Äô, as users are able to get a high rank while racking them up. At the same time, this illuminates other playing styles that can also bring success i.e.¬†users who refrain from taking ‚Äòhits‚Äô are able to get as high rank as those that do.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;picking-the-bench&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Picking the bench&lt;/h2&gt;
&lt;p&gt;Every user talks about the time they left that weeks hot player on the bench (each gameweek, you must choose a starting 11 players - if they play, your back-up players, or ‚Äòbench‚Äô, do not play and do not collect points). This often leads to disgruntled folk who hold dear the belief that some kind of FPL God is consistently against them. If we look at users‚Äô benches across the season, how much variation is there?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/fpl-mythbusting-with-fplr_files/figure-html/bench-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;What we see is close to a normal distribution. So, probably no FPL God‚Äôs retribution. Most people benched somewhere in the region of 150-300 points over the course of a season, with an unlucky/lucky few coming in higher or lower respectively.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bandwagons&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bandwagons&lt;/h2&gt;
&lt;p&gt;Another phenomenon, representing something of an FPL meta-game, is that of the ‚Äúbandwagon‚Äù. This refers to times when certain players put in particularly explosive performances, triggering big movements in the market (i.e.¬†lots of people bringing them in, similar to a hot stock). When were the biggest transfer booms?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/fpl-mythbusting-with-fplr_files/figure-html/bandwagons-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Dele Alli had the biggest influx of transfers all season in gameweek 21, after a masterclass against Chelsea. Incidentally, both the 2nd (Ibrahimovic) and 3rd (Gundogan) highest net transfers followed games against West Brom.&lt;/p&gt;
&lt;p&gt;As for the biggest net losses, these mostly belonged to players of high ownership who suffered serious injuries/suspensions. The most interesting case is that of Diego Costa, who was the center of a media frenzy claiming a (real-life) transfer to China was imminent (this never materialized).&lt;/p&gt;
&lt;p&gt;Of course, these absolute swings are largely governed by a player‚Äôs initial ownership size and profile. We can look at percentage changes in ownership of players to consider those who had large &lt;em&gt;relative&lt;/em&gt; shifts in selection.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/fpl-mythbusting-with-fplr_files/figure-html/bandwagon%20relative-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we see huge percentage increases in the ownership of Fer and Stuani after promising displays on the opening day of the season and second gameweek, respectively. It is often in the very early stages that users scramble for players, often after just a single good performance, as there are few data points to go by otherwise. Jesus and Gabbiadini were actually both new arrivals to the game in the mid-season transfer window (in January, clubs can buy additional players) who started well - again, in the absence of any long-term trend, users rushed to scoop up these players.&lt;/p&gt;
&lt;p&gt;Of course, the % drop in ownership is naturally capped (ownership can only fall by 100%). Interestingly, just two games after Jesus‚Äô huge upswing in ownership, he gave us the biggest fall (&lt;strong&gt;almost 90%&lt;/strong&gt; of owners dropped him)! If that‚Äôs not Murphy‚Äôs Law in full effect, I don‚Äôt know what is.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;how-often-are-the-top-players-hot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;How often are the top players hot?&lt;/h2&gt;
&lt;p&gt;Come the end of the season, we check the top point-scoring players and yearn for what might‚Äôve been if we‚Äôd snapped them up at the right time. How much love did the top (eight) overall point scorers actually get from FPL users over the season, and when?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/fpl-mythbusting-with-fplr_files/figure-html/streaks%20two-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We see very different relationships between certain players and the transfer market. De Bruyne remains exceptionally stable in ownership after a couple of early season swings, while Kane‚Äôs ownership is volatile throughout. Some of this will be determined by player availability (i.e.¬†were they injured/suspended), but also by how much variation there is in their points-scoring. Do we see consistency in the performance level of these players?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/fpl-mythbusting-with-fplr_files/figure-html/streaks%20three-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By applying a moving average in the above chart (each data point is an average of the last five gameweeks), we can imagine performance in terms of season phases. For someone like De Bruyne, we notice that his peak performances came at the very start and end of the season, which perhaps explains the tepid market in the middle of the season. In a similar fashion, we can identify ‚Äòpurple patches‚Äô of players, like Alli in the season middle. Much of FPL success can be determined by ensuring ownership of these players during such patches.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;wrap-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Wrap-up&lt;/h2&gt;
&lt;p&gt;I hope this illustrates some of the possibilities available with the &lt;code&gt;fplR&lt;/code&gt; package. I had a lot of fun making it, and look forward to using it to better understand my FPL experience. Do share any interesting things you‚Äôre able to do with it (or any things that go wrong with it‚Ä¶), and &lt;em&gt;try&lt;/em&gt; to enjoy the new season. It‚Äôs just a game‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;In this post I have referred to actual footballers as ‚Äòplayers‚Äô, and players of the FPL game as ‚Äòusers‚Äô.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tracking London&#39;s Pub &amp; Bar Landscape with geofacet</title>
      <link>https://ewen.io/2017/05/30/tracking-londons-pub--bar-landscape-with-geofacet/</link>
      <pubDate>Tue, 30 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2017/05/30/tracking-londons-pub--bar-landscape-with-geofacet/</guid>
      <description>&lt;div id=&#34;introducing-geofacet&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introducing geofacet&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/hafen/geofacet&#34;&gt;&lt;code&gt;geofacet&lt;/code&gt;&lt;/a&gt; package dropped recently (I want to say last week?), a &lt;code&gt;ggplot2&lt;/code&gt; extension allowing for the user to facet plots in a way that can retain an underlying geographical dimension. It perhaps goes a little bit further towards abstraction than &lt;a href=&#34;https://pitchinteractiveinc.github.io/tilegrams/&#34;&gt;tilegrams&lt;/a&gt;, but the visualizations we produce can be a bit more complex as well. This post documents my first foray into this packages functionality.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-to-grips-with-grids&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting to grips with grids&lt;/h2&gt;
&lt;p&gt;If we think about faceting in &lt;code&gt;ggplot2&lt;/code&gt; (&lt;code&gt;facet_wrap&lt;/code&gt;, &lt;code&gt;facet_grid&lt;/code&gt;), we are already familiar with the idea of placing a sequence of plots into a number of panels, arranged according to a variable(s) of interest.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;geofacet&lt;/code&gt; is based on the assumption that we want to arrange our sequence of plots into a grid that preserves some known geographical orientation. These known geographical orientations are stored as &lt;strong&gt;grids&lt;/strong&gt;, which provide us with row and column values corresponding to a panel‚Äôs position in a faceted plot. Take this US states example, providing grid positions for US states:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(geofacet::us_state_grid1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   row col code       name
## 1   6   7   AL    Alabama
## 2   7   2   AK     Alaska
## 3   5   2   AZ    Arizona
## 4   5   5   AR   Arkansas
## 5   4   1   CA California
## 6   4   3   CO   Colorado&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This grid also contains geographical data (state codes/names). We can simply join our data, that sits nicely within this geographical framework, to this grid and start ‚Äògeofaceting‚Äô.&lt;/p&gt;
&lt;p&gt;There is a function in the package, &lt;code&gt;submit_grid&lt;/code&gt;, which allows users to submit their own grids (as a dataframe, like in the above example) as a github issue and hopefully get them incorporated into the package proper. Having kicked off with just the US states, there‚Äôs now grids for EU countries, South African provinces, Australian states and London boroughs. Nice - my business is with the latter‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;geofaceting-london&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Geofaceting London&lt;/h2&gt;
&lt;p&gt;A couple of months ago, &lt;a href=&#34;https://data.london.gov.uk/dataset/the-number-of-public-houses-and-bars-in-london-2001-2016&#34;&gt;a dataset was published&lt;/a&gt; containing the number of public houses (pubs) and bars by local authority (borough) in London from 2001 through 2016. We‚Äôll use this to demonstrate how this package can help us visualize trends in data without losing the geography along the way.&lt;/p&gt;
&lt;p&gt;Below is a map of London‚Äôs boroughs, in case you aren‚Äôt familiar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/img/2017-05-30-geofacet_ldn_pubs/boroughs.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;With that cleared up, let‚Äôs load up this data and get it into shape.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(geofacet)
library(tidyverse)
library(gdata)
library(stringr)
library(viridis)
library(scales)
library(hrbrthemes)

#read/clean pubs data
pubs &amp;lt;- read.xls(&amp;quot;http://files.datapress.com/london/dataset/the-number-of-public-houses-and-bars-in-london-2001-2016/2017-04-13T14:37:50.73/numberofpublichousesandbarsinlondon2001to2016.xls&amp;quot;,
                 sheet = &amp;quot;Number of workplaces by LA&amp;quot;, skip=2, stringsAsFactors=FALSE) %&amp;gt;%
  filter(!`X.1` %in% c(&amp;quot;&amp;quot;, &amp;quot;London&amp;quot;)) %&amp;gt;%
  gather(key=year, value=count, -X, -`X.1`) %&amp;gt;%
  rename(code_ons=X, area_name=`X.1`) %&amp;gt;%
  mutate(count=as.numeric(count), year=as.numeric(str_replace(year, &amp;quot;X&amp;quot;, &amp;quot;&amp;quot;))) %&amp;gt;%
  # add year-on-year pct change
  arrange(area_name) %&amp;gt;%
  group_by(area_name) %&amp;gt;%
  mutate(prev=lag(count, order_by=year, default=first(count)),
         yoy_chg=(count-prev)/prev)

glimpse(pubs)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 528
## Variables: 6
## $ code_ons  &amp;lt;chr&amp;gt; &amp;quot;E09000002&amp;quot;, &amp;quot;E09000002&amp;quot;, &amp;quot;E09000002&amp;quot;, &amp;quot;E09000002&amp;quot;, ...
## $ area_name &amp;lt;chr&amp;gt; &amp;quot;Barking and Dagenham&amp;quot;, &amp;quot;Barking and Dagenham&amp;quot;, &amp;quot;Bar...
## $ year      &amp;lt;dbl&amp;gt; 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009...
## $ count     &amp;lt;dbl&amp;gt; 45, 40, 45, 40, 40, 40, 30, 30, 25, 25, 25, 30, 20, ...
## $ prev      &amp;lt;dbl&amp;gt; 45, 45, 40, 45, 40, 40, 40, 30, 30, 25, 25, 25, 30, ...
## $ yoy_chg   &amp;lt;dbl&amp;gt; 0.00000000, -0.11111111, 0.12500000, -0.11111111, 0....&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, we have a tidy dataframe with yearly counts and year-on-year change in pub numbers by borough. Let‚Äôs peek at the existing &lt;code&gt;geofacet&lt;/code&gt; grid for London boroughs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(london_boroughs_grid)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 33
## Variables: 4
## $ row      &amp;lt;int&amp;gt; 4, 4, 2, 5, 3, 6, 3, 6, 3, 1, 5, 3, 4, 2, 2, 3, 3, 4,...
## $ col      &amp;lt;int&amp;gt; 5, 8, 4, 8, 3, 6, 4, 5, 2, 5, 7, 6, 2, 5, 3, 8, 1, 1,...
## $ code_ons &amp;lt;chr&amp;gt; &amp;quot;E09000001&amp;quot;, &amp;quot;E09000002&amp;quot;, &amp;quot;E09000003&amp;quot;, &amp;quot;E09000004&amp;quot;, &amp;quot;...
## $ name     &amp;lt;chr&amp;gt; &amp;quot;City of London&amp;quot;, &amp;quot;Barking and Dagenham&amp;quot;, &amp;quot;Barnet&amp;quot;, &amp;quot;...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We‚Äôre ready to join these on the ONS code field. I‚Äôll also put in some line breaks to the borough names - I think some of these might be too long for a densely paneled plot, otherwise.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#clean boro strings in pubs df
pubs$area_name &amp;lt;- str_replace(pubs$area_name, &amp;quot; &amp;quot;, &amp;quot;\n&amp;quot;)

#clean boro strings in geofacet grid df
london_boroughs_grid$name &amp;lt;- str_replace(london_boroughs_grid$name, &amp;quot; &amp;quot;, &amp;quot;\n&amp;quot;)

# join pubs w/ grid
pubs &amp;lt;- inner_join(pubs, london_boroughs_grid, by =&amp;quot;code_ons&amp;quot;) %&amp;gt;%
  select(-name)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ready to plot. All we need to do is call &lt;code&gt;facet_geo&lt;/code&gt; in the same way we might have faceted by borough using &lt;code&gt;facet_wrap&lt;/code&gt; previously. This has to be accompanied by a &lt;code&gt;grid&lt;/code&gt; argument, specifying the grid we want to facet with. We can go on to tweak the plot using familiar &lt;code&gt;ggplot2&lt;/code&gt; commands.&lt;/p&gt;
&lt;p&gt;Here‚Äôs my first effort:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# geofaceted plot of year-on-year pubs % change 
ggplot(data = pubs, aes(x=year, y=yoy_chg, fill=yoy_chg)) +
  geom_col() +
  geom_hline(yintercept = 0) +
  facet_geo( ~ area_name, grid = &amp;quot;london_boroughs_grid&amp;quot;) +
  scale_x_continuous(breaks = c(2001, 2016), 
                     labels = NULL) +
  scale_y_percent(limits=c(-0.35,0.25), breaks=c(-0.3, 0, 0.25), labels = NULL) +
  labs(title = &amp;quot;The Evolution of London&amp;#39;s Pubs &amp;amp; Bars&amp;quot;,
       subtitle = &amp;quot;No. of Public Houses and Bars by London borough, 2001-2016&amp;quot;,
       caption = &amp;quot;Source: data.london.gov.uk&amp;quot;, x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;) +
  theme_minimal(base_family = &amp;quot;Arial Narrow&amp;quot;, base_size = 14) +
  scale_fill_viridis(option=&amp;quot;D&amp;quot;,limits=c(-0.35,0.25), name=&amp;quot;Year-on-year\n% change&amp;quot;,
                     labels=percent) +
  theme(legend.position=c(.9, .95))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/geofacet-london-pubs_files/figure-html/geofacet-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;close&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Close&lt;/h2&gt;
&lt;p&gt;As the package author, &lt;a href=&#34;https://twitter.com/hafenstats/status/869621852385165312&#34;&gt;Ryan Hafen accepts&lt;/a&gt; that some of these plot‚Äôs readability does rely on some pre-existing knowledge of the underlying geography (Ryan also says to watch out for some ideas to deal with this). Bearing this in mind, there are opportunities to make eye-catching plots on the occasions when this assumption holds (see &lt;a href=&#34;https://www.nytimes.com/2017/05/25/opinion/sunday/the-assault-on-colleges-and-the-american-dream.html&#34;&gt;this New York Times example&lt;/a&gt;). I reckon I‚Äôm gonna have fun with it‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;To keep the post concise I don‚Äôt show all of the code, especially code that generates figures. But you can find the full code &lt;a href=&#34;https://github.com/rbind/ewenme/blob/master/content/blog/geofacet-london-pubs.Rmd&#34;&gt;here&lt;/a&gt;.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The Representativeness of UK Parliament</title>
      <link>https://ewen.io/2017/04/23/the-representativeness-of-uk-parliament/</link>
      <pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ewen.io/2017/04/23/the-representativeness-of-uk-parliament/</guid>
      <description>&lt;p&gt;As a general election looms, a familiar UK media maelstrom has begun. The key difference here is that the public has been taken by surprise, somewhat - Theresa May‚Äôs call for a snap election (we weren‚Äôt actually due one until 2020) has left folk with little under two months to decide where their vote will go.&lt;/p&gt;
&lt;p&gt;For some, this may be the first election they are able to participate in. For many, the traditional delivery of party politics might not have kept them engaged all that well since the last election. Unfortunately, there isn‚Äôt too much time to get all cases like these as up to speed as we would like this time round. The good news is there are ambitious projects like &lt;a href=&#34;http://everypolitician.org/uk/&#34;&gt;EveryPolitician&lt;/a&gt; looking to make governments around the world more transparent - perhaps we can leverage the data inside to empower voters, in some small way, ahead of 8th June.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;inside-everypolicitian&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Inside EveryPolicitian&lt;/h2&gt;
&lt;p&gt;EveryPolitician‚Äôs mission is simple: &lt;em&gt;‚Äúcollect and share data about every politician in every country in the world, in a consistent, open format that anyone can use.‚Äù&lt;/em&gt; They don‚Äôt provide an API to query, but we can download the whole lot (for the UK) in JSON format to work on:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- fromJSON(&amp;quot;https://cdn.rawgit.com/everypolitician/everypolitician-data/8382ff6bd31785d630950716ccb53eccfbe8485f/data/UK/Commons/ep-popolo-v1.0.json&amp;quot;)

members &amp;lt;- as.data.frame(data$persons) %&amp;gt;%
  left_join(as.data.frame(data$memberships), by = c(&amp;quot;id&amp;quot;=&amp;quot;person_id&amp;quot;)) %&amp;gt;%
  mutate(legislative_period_id=as_factor(legislative_period_id),
         birth_date=as.Date(birth_date),
         on_behalf_of_id=as_factor(on_behalf_of_id),
         on_behalf_of_id_recoded =fct_recode(on_behalf_of_id, &amp;quot;Conservative&amp;quot;=&amp;quot;conservative&amp;quot;,
                                             &amp;quot;DUP&amp;quot;=&amp;quot;dup&amp;quot;, &amp;quot;Labour&amp;quot;=&amp;quot;labour&amp;quot;, 
                                             &amp;quot;SNP&amp;quot;=&amp;quot;scottish-national-party&amp;quot;,
                                             &amp;quot;Lib Dem&amp;quot;=&amp;quot;liberal-democrat&amp;quot;, &amp;quot;UUP&amp;quot;=&amp;quot;uup&amp;quot;,
                                             &amp;quot;Plaid Cymru&amp;quot;=&amp;quot;plaid-cymru&amp;quot;,
                                             &amp;quot;Independent&amp;quot;=&amp;quot;independent&amp;quot;, 
                                             &amp;quot;Labour&amp;quot;=&amp;quot;labourco-operative&amp;quot;,
                                             &amp;quot;Sinn Fein&amp;quot;=&amp;quot;sinn-fein&amp;quot;, 
                                             &amp;quot;Deputy Speaker&amp;quot;=&amp;quot;deputy-speaker&amp;quot;, 
                                             &amp;quot;Speaker&amp;quot;=&amp;quot;speaker&amp;quot;, &amp;quot;Green&amp;quot;=&amp;quot;green&amp;quot;,
                                             &amp;quot;UKIP&amp;quot;=&amp;quot;ukip&amp;quot;,
                                             &amp;quot;SDLP&amp;quot;=&amp;quot;social-democratic-and-labour-party&amp;quot;,
                                             &amp;quot;Independent&amp;quot;=&amp;quot;independent-conservative&amp;quot;,
                                             &amp;quot;Independent&amp;quot;=&amp;quot;independent-ulster-unionist&amp;quot;,
                                             &amp;quot;Respect&amp;quot;=&amp;quot;respect&amp;quot;, &amp;quot;UKUP&amp;quot;=&amp;quot;ukup&amp;quot;,
                                             &amp;quot;Independent&amp;quot;=&amp;quot;independent-labour&amp;quot;,
                                             &amp;quot;Alliance&amp;quot;=&amp;quot;alliance&amp;quot;),
         term_start=as.Date(fct_recode(legislative_period_id, &amp;quot;2015-05-08&amp;quot;=&amp;quot;term/56&amp;quot;,
                                       &amp;quot;2010-05-06&amp;quot;=&amp;quot;term/55&amp;quot;, &amp;quot;2005-05-05&amp;quot;=&amp;quot;term/54&amp;quot;,
                                       &amp;quot;2001-06-07&amp;quot;=&amp;quot;term/53&amp;quot;, &amp;quot;1997-05-01&amp;quot;=&amp;quot;term/52&amp;quot;)),
         legislative_period_id=fct_recode(legislative_period_id, &amp;quot;Term 56\n(2015-)&amp;quot;=&amp;quot;term/56&amp;quot;,
                                          &amp;quot;Term 55\n(2010-2015)&amp;quot;=&amp;quot;term/55&amp;quot;, 
                                          &amp;quot;Term 54\n(2005-2010)&amp;quot;=&amp;quot;term/54&amp;quot;,
                                          &amp;quot;Term 53\n(2001-2005)&amp;quot;=&amp;quot;term/53&amp;quot;, 
                                          &amp;quot;Term 52\n(1997-2001)&amp;quot;=&amp;quot;term/52&amp;quot;),
         age_at_term_start=as.numeric(floor(difftime(term_start, birth_date,
                                                     units=&amp;quot;days&amp;quot;)/365))) %&amp;gt;%
  select(name, birth_date, gender, on_behalf_of_id_recoded, role, legislative_period_id,
         term_start, age_at_term_start, id)

glimpse(members)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 3,374
## Variables: 9
## $ name                    &amp;lt;chr&amp;gt; &amp;quot;Ron Davies&amp;quot;, &amp;quot;George Osborne&amp;quot;, &amp;quot;Georg...
## $ birth_date              &amp;lt;date&amp;gt; 1946-08-06, 1971-05-23, 1971-05-23, 1...
## $ gender                  &amp;lt;chr&amp;gt; &amp;quot;male&amp;quot;, &amp;quot;male&amp;quot;, &amp;quot;male&amp;quot;, &amp;quot;male&amp;quot;, &amp;quot;male&amp;quot;...
## $ on_behalf_of_id_recoded &amp;lt;fct&amp;gt; Labour, Conservative, Conservative, Co...
## $ role                    &amp;lt;chr&amp;gt; &amp;quot;member&amp;quot;, &amp;quot;member&amp;quot;, &amp;quot;member&amp;quot;, &amp;quot;member&amp;quot;...
## $ legislative_period_id   &amp;lt;fct&amp;gt; Term 52
## (1997-2001), Term 53
## (2001-200...
## $ term_start              &amp;lt;date&amp;gt; 1997-05-01, 2001-06-07, 2005-05-05, 2...
## $ age_at_term_start       &amp;lt;dbl&amp;gt; 50, 30, 33, 38, 43, 53, 57, 61, 48, 52...
## $ id                      &amp;lt;chr&amp;gt; &amp;quot;007f7ffe-65df-4166-afad-f3c8934afd8d&amp;quot;...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We now have biographic and demographic data for all members of Parliament across the last five legislative periods, or terms. With this information, it may be possible to start demonstrating how representativeness manifests itself in Parliament.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;gender-balance&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Gender Balance&lt;/h2&gt;
&lt;p&gt;Something which demands immediate attention (not just in this domain) is understanding member‚Äôs proportional representation by gender. A big problem for many voters is finding members to identify with, given the historic barriers to women entering a male-dominated parliamentary system. How does female representation look over time?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/uk-parliament-representativeness_files/figure-html/female_rep-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There has been sustained improvements in gender balance since the mid-00s, however it‚Äôs still some way short of equality.&lt;/p&gt;
&lt;p&gt;Of course, the 30% representation we see in the current term is an aggregate of different political parties. What does this percentage look like by party?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;N.B. The below graphic only includes the three parties with the largest count of members in the latest Parliament. Each of the other parties had fewer than ten representatives.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/uk-parliament-representativeness_files/figure-html/party_genders-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Labour, currently the second largest party by no. of MPs (238), has double the proportionate amount of female MPs in comparison with the biggest, the Conservatives (333).&lt;/p&gt;
&lt;p&gt;It must be remembered that these figures represent &lt;em&gt;elected&lt;/em&gt; officials, and so possible gender biases may stem from voters as well as the parties themselves. An in-depth analysis of historical party candidate gender proportions and subsequent voting patterns could start to unpick this. For the purposes of this analysis, we are interested in sharing information to help the uninformed understand what parties and parliament look like, and this is a good start - perhaps identifying trends over time in the biggest parties would be a good next step.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/uk-parliament-representativeness_files/figure-html/female_trend-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It appears that Labour was first to demonstrate growth in female representation during the mid-00s, with the Conservatives following this example in Term 55. What is most apparent is that Labour now appears close to an equal gender split, while the Conservative party is still lower than Labour has ever been over the considered period.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;age&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Age&lt;/h2&gt;
&lt;p&gt;Another important characteristic when considering the representativeness of government is member‚Äôs ages. Amongst parties, demonstrating the distribution of ages can illuminate whether a party reflects the public.&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;N.B. The below graphic only includes parties with 30 or more members across the last five Parliamentary terms.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/uk-parliament-representativeness_files/figure-html/unnamed-chunk-1-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Looking across the previous five Parliamentary terms in the above plot, you can see that the Labour ‚Äòbulge‚Äô is higher than the Conservatives, hinting at an older pool of members. Has this always been the case?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/uk-parliament-representativeness_files/figure-html/unnamed-chunk-2-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This divergence in MP ages across the Labour and Conservative parties came into being after commencement of the 54th term, which was the last Labour victory. The gap has been maintained ever since.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;turnover&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Turnover&lt;/h2&gt;
&lt;p&gt;We‚Äôve explored how gender and age manifest in Parliament across time and parties, and perhaps now would be a good time to examine these factors in relation to how often MPs actually keep their seats.&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/uk-parliament-representativeness_files/figure-html/unnamed-chunk-3-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The above chart gives a sense of the ‚Äòturnover‚Äô in Parliament between terms. We see a decline in the likelihood of an MP keeping their seat as their time in situ increases (beyond the first re-election). How does this stand up by gender?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/uk-parliament-representativeness_files/figure-html/unnamed-chunk-4-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This is revealing as to why the Conservative party has seen limited growth in female representation - their female MPs are most likely to not be re-elected at all.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;an-international-peek&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;An International Peek&lt;/h2&gt;
&lt;p&gt;It might be useful to provide some international context to proceedings. By returning to the &lt;em&gt;EveryPolitician&lt;/em&gt; data store, we can extract similar data for other countries and see how they stack up on some of the hot topics discussed above.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;N.B. At the time of writing, there aren‚Äôt an abundance of nations with politician data beyond the most recent government term. The below selection represents those countries with data enough to look at trends over time.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ewen.io/blog/uk-parliament-representativeness_files/figure-html/unnamed-chunk-5-1.svg&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now, the range of data still varies quite a lot here (for the U.S. we have data back to 1983, compared with 2001 for the UK), so the above trends should be treated as indicative timelines of a countries record in this area. Still, we can certainly compare recent performance and see some obvious worries - both Germany and the U.S. have experienced big drop-offs in female representation in their elected governments, and have shown little signs of recovery since. Big-ups must be given to Sweden, with mid-40% female representation across their previous six terms.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;some-last-words&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Some last words&lt;/h2&gt;
&lt;p&gt;I hope this exercise, shedding light on the current and historical level of representativeness within UK Parliament (and beyond), can achieve a couple of things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Help first-time or unsure voters who care about representativeness and diversity understand more about the composition of parties, and the progress these parties are making to combat issues&lt;/li&gt;
&lt;li&gt;Demonstrate the utility and importance of resources like EveryPolitician in making governments more transparent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While the &lt;em&gt;EveryPolitician project&lt;/em&gt; is still in early days and is first trying to get basic information for &lt;em&gt;all&lt;/em&gt; countries (if you can help with &lt;a href=&#34;http://everypolitician.org/countries.html&#34;&gt;these missing ones&lt;/a&gt;, please do), a vital next step would be to collect data on ethnicity to expand this sort of ‚Äòdemographic audit‚Äô and enable more measures of diversity in governments. Also, a fuller international bench-marking exercise beckons for sure! That‚Äôs all from me for now‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;To keep the post concise I don‚Äôt show all of the code, especially code that generates figures. But you can find the full code &lt;a href=&#34;https://github.com/rbind/ewenme/blob/master/content/blog/uk-parliament-representativeness.Rmd&#34;&gt;here&lt;/a&gt;.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Two MPs with missing ages were excluded from the parts of the analysis studying age, at the time of writing: Sarah Olney (Liberal Democrats) and Caroline Johnson (Conservative).&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;I decided to exclude Speakers and Deputy Speakers from this part of the analysis. These are individuals performing roles in Parliament that are unaffiliated with any party, and are not publicly elected positions.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;‚Ü©&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>